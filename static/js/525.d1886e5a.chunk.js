"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[525],{18525:(e,t,o)=>{async function i(e,t,o){var i=new o.Scene(e);i.clearColor=o.Color4.FromHexString("#9C8D7AFF");const n=new o.FreeCamera("camera",new o.Vector3(.3,2,-4),i);n.position=new o.Vector3(0,1,-2.5),n.speed=.1,n.minZ=.01,n.attachControl(t,!0);new o.HemisphericLight("light",new o.Vector3(1,1,0),i);var r=o.GUI.AdvancedDynamicTexture.CreateFullscreenUI("UI"),a=new o.GUI.Slider("radius");a.minimum=.5,a.maximum=100,a.value=70,a.height="20px",a.width="200px",a.top="-40px",a.horizontalAlignment=o.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER,a.verticalAlignment=o.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM,r.addControl(a);var l,s=new o.GUI.Slider("distance");s.minimum=1,s.maximum=10,s.value=3,s.height="20px",s.width="200px",s.top="-10px",s.horizontalAlignment=o.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER,s.verticalAlignment=o.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM,r.addControl(s),o.SceneLoader.ImportMesh("","https://raw.githubusercontent.com/UN1TOne/3DAsset/master/","human_house.glb",i,(function(e){(l=e[0]).scaling.scaleInPlace(.25),e.forEach((e=>{if(e.material&&e.material.albedoTexture){const t=new o.ShaderMaterial("cutoutShader",i,{vertex:"cutout",fragment:"cutout"},{attributes:["position","normal","uv"],uniforms:["worldViewProjection","cameraPosition","hitPoint","radius","albedoTexture"]});t.setTexture("albedoTexture",e.material.albedoTexture),t.setFloat("radius",a.value),i.onBeforeRenderObservable.add((()=>{const r=new o.Ray(n.position,n.getForwardRay().direction,10),l=i.pickWithRay(r);if(l.hit&&l.pickedPoint){const i=o.Vector3.TransformCoordinates(l.pickedPoint,o.Matrix.Invert(e.getWorldMatrix()));o.Vector3.Distance(n.position,l.pickedPoint)<s.value?t.setVector3("hitPoint",i):t.setVector3("hitPoint",new o.Vector3(1e3,1e3,1e3))}t.setFloat("radius",a.value)})),e.material=t}})),l.rotation=new o.Vector3(0,2*Math.PI,0)}));o.Effect.ShadersStore.cutoutVertexShader="\n        precision highp float;\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 worldViewProjection;\n        varying vec3 vPosition;\n        varying vec2 vUV;\n\n        void main() {\n            vPosition = position;\n            vUV = uv;\n            gl_Position = worldViewProjection * vec4(position, 1.0);\n        }\n    ",o.Effect.ShadersStore.cutoutFragmentShader="\n        precision highp float;\n        varying vec3 vPosition;\n        varying vec2 vUV;\n        uniform vec3 hitPoint;\n        uniform float radius;\n        uniform sampler2D albedoTexture;\n\n        void main() {\n             vec4 baseColor = texture2D(albedoTexture, vUV);\n\n            float dist = length(hitPoint - vPosition);\n            float edgeSmooth = smoothstep(radius - 1.0, radius, dist);\n\n            float alpha = mix(0.8, 1.0, edgeSmooth);\n\n            vec4 finalColor = vec4(baseColor.rgb, baseColor.a * alpha);\n\n            gl_FragColor = finalColor;\n\n            if (edgeSmooth < 0.1) discard;\n        }\n    ";const c=new o.Mesh("root",i),d=o.MeshBuilder.CreateSphere("head",{diameter:2},i);d.position.y=2;const u=o.MeshBuilder.CreateCylinder("body",{diameterTop:1.5,diameterBottom:1.5,height:2},i);u.position.y=.5;const h=o.MeshBuilder.CreateCylinder("armLeft",{diameter:.5,height:1.5},i);h.position.set(-1.35,1.8,0),h.rotation.z=Math.PI/4;const m=h.clone("armRight");m.position.x=1.35,m.rotation.z=-Math.PI/4;const p=o.MeshBuilder.CreateCylinder("legLeft",{diameter:.7,height:1.5},i);p.position.set(-.5,-1,0);const v=p.clone("legRight");v.position.x=.5;const f=o.MeshBuilder.CreateSphere("earLeft",{diameter:.8},i);f.position.set(-.8,3,0);const g=f.clone("earRight");g.position.x=.8;const C=o.MeshBuilder.CreateSphere("eyeLeft",{diameter:.3},i);C.position.set(-.4,2.3,-.9);const P=C.clone("eyeRight");P.position.x=.4;const w=o.MeshBuilder.CreateTorus("mouth",{diameter:.6,thickness:.1},i);w.rotation.x=Math.PI/2,w.position.set(0,1.8,-1);const M=new o.StandardMaterial("brown",i);M.diffuseColor=new o.Color3(.43,.22,.05),M.specularColor=o.Color3.Black();const x=new o.StandardMaterial("black",i);x.diffuseColor=new o.Color3(0,0,0),x.specularColor=o.Color3.Black();const T=new o.StandardMaterial("red",i);T.diffuseColor=new o.Color3(1,0,0),T.specularColor=o.Color3.Black(),d.setParent(c),u.setParent(c),h.setParent(c),m.setParent(c),p.setParent(c),v.setParent(c),f.setParent(c),g.setParent(c),C.setParent(c),P.setParent(c),w.setParent(c),c.scaling.scaleInPlace(.1),c.position.y=.5,d.material=M,u.material=M,h.material=M,m.material=M,p.material=M,v.material=M,f.material=M,g.material=M,C.material=x,P.material=x,w.material=T;let I=0;return i.onBeforeRenderObservable.add((()=>{var e,t;const o=i.getEngine().getDeltaTime(),r=n.getForwardRay(100),a=i.multiPickWithRay(r);if(!a||0===a.length)return void(I=0);let s=a.find((e=>e.pickedMesh&&!e.pickedMesh.isDescendantOf(l)));console.log(null===s||void 0===s||null===(e=s.pickedMesh)||void 0===e?void 0:e.name),console.log(null===s||void 0===s||null===(t=s.pickedMesh)||void 0===t?void 0:t.isDescendantOf(c)),s&&s.pickedMesh.isDescendantOf(c)?(I+=o,I>=1500&&(alert("You found me!"),I=-1/0)):I=0})),i}o.r(t),o.d(t,{createScene:()=>i})}}]);
//# sourceMappingURL=525.d1886e5a.chunk.js.map