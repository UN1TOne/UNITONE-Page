{"version":3,"file":"static/js/600.743d2885.chunk.js","mappings":"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","sources":["babylon/fireworks.js"],"sourcesContent":["export async function createScene(engine, canvas, BABYLON) {\r\n  var scene = new BABYLON.Scene(engine);\r\n\r\n  let time = 0;\r\n\r\n  scene.registerBeforeRender(() => {\r\n    time += 0.005;\r\n    const r = (Math.sin(time) * 0.5 + 0.5) * 0.5;\r\n    const g = (Math.sin(time + Math.PI / 3) * 0.5 + 0.5) * 0.5;\r\n    const b = (Math.sin(time + Math.PI / 1.5) * 0.5 + 0.5) * 0.5;\r\n\r\n    scene.clearColor = new BABYLON.Color4(r, g, b, 1);\r\n  });\r\n\r\n  var camera = new BABYLON.ArcRotateCamera(\"camera\", BABYLON.Tools.ToRadians(90), BABYLON.Tools.ToRadians(65), 10, BABYLON.Vector3.Zero(), scene);\r\n  camera.setTarget(new BABYLON.Vector3(0.07, 10, 0.06));\r\n  camera.alpha = 1.571;\r\n  camera.beta = 1.473;\r\n  camera.radius = 50;\r\n  camera.inertia = 0.4;\r\n  camera.wheelDeltaPercentage = 0.3;\r\n  camera.panningSensibility = 0;\r\n  camera.minZ = 0.01;\r\n  camera.maxZ = 100;\r\n  camera.upperBetaLimit = Math.PI / 2;\r\n  camera.attachControl(canvas, true);\r\n  camera.useAutoRotationBehavior = true;\r\n  camera.autoRotationBehavior.idleRotationSpeed = 0.5;\r\n\r\n  var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  light.intensity = 0.7;\r\n\r\n  // Physics\r\n  const gravityVector = new BABYLON.Vector3(0, -9.81, 0);\r\n  const physicsPlugin = new BABYLON.AmmoJSPlugin();\r\n  scene.enablePhysics(gravityVector, physicsPlugin);\r\n\r\n  // Set up new rendering pipeline\r\n  const pipeline = new BABYLON.DefaultRenderingPipeline(\"default\", true, scene);\r\n\r\n  // Tone mapping\r\n  scene.imageProcessingConfiguration.toneMappingEnabled = true;\r\n  scene.imageProcessingConfiguration.toneMappingType = BABYLON.ImageProcessingConfiguration.TONEMAPPING_ACES;\r\n  scene.imageProcessingConfiguration.exposure = 1;\r\n\r\n  // Bloom\r\n  pipeline.bloomEnabled = true;\r\n  pipeline.bloomThreshold = 0.8;\r\n  pipeline.bloomWeight = 0.3;\r\n  pipeline.bloomKernel = 64;\r\n  pipeline.bloomScale = 0.5;\r\n\r\n  // Noise\r\n  const noiseTexture1 = new BABYLON.NoiseProceduralTexture(\"perlin\", 256, scene);\r\n  noiseTexture1.animationSpeedFactor = 5;\r\n  noiseTexture1.persistence = 0.2;\r\n  noiseTexture1.brightness = 0.5;\r\n  noiseTexture1.octaves = 4;\r\n\r\n  // Spawn particle system on key press\r\n  scene.onKeyboardObservable.add((kbInfo) => {\r\n    switch (kbInfo.type) {\r\n      case BABYLON.KeyboardEventTypes.KEYDOWN:\r\n        if (kbInfo.event.code === \"Space\") {\r\n          launchBarrel();\r\n        }\r\n\r\n        break;\r\n    }\r\n  });\r\n\r\n  // Set up animation sheet\r\n  const setupAnimationSheet = function (system, texture, width, height, numSpritesWidth, numSpritesHeight, animationSpeed, isRandom) {\r\n    // Assign animation parameters\r\n    system.isAnimationSheetEnabled = true;\r\n    system.particleTexture = new BABYLON.Texture(texture, scene, false, false);\r\n    system.spriteCellWidth = width / numSpritesWidth;\r\n    system.spriteCellHeight = height / numSpritesHeight;\r\n    const numberCells = numSpritesWidth * numSpritesHeight;\r\n    system.startSpriteCellID = 0;\r\n    system.endSpriteCellID = numberCells - 1;\r\n    system.spriteCellChangeSpeed = animationSpeed;\r\n    system.spriteRandomStartCell = isRandom;\r\n    system.updateSpeed = 1 / 60;\r\n  };\r\n\r\n  // Launch barrel\r\n  function launchBarrel() {\r\n    PS_State.flag = !PS_State.flag;\r\n    console.log(PS_State.flag);\r\n  }\r\n\r\n  let PS_State = {\r\n    count: 0,\r\n    isExploded: false,\r\n  };\r\n\r\n  let interval = setInterval(() => {\r\n    if (!PS_State.flag) {\r\n      explode();\r\n      PS_State.count++;\r\n      if (PS_State.count >= 5) {\r\n        console.log(\"stop\");\r\n        PS_State.flag = true;\r\n      }\r\n    }\r\n  }, 300);\r\n\r\n  if (PS_State.flag) clearInterval(interval);\r\n\r\n  function createSystem() {\r\n    var particleSystem1 = new BABYLON.ParticleSystem(\"subEmitter\", 400, scene);\r\n\r\n    //Texture of each particle\r\n    particleSystem1.particleTexture = new BABYLON.Texture(\"https://i.imgur.com/FJZc4lO.png\", scene);\r\n\r\n    particleSystem1.createSphereEmitter(2);\r\n\r\n    // Colors of all particles\r\n    // particleSystem1.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0);\r\n    // particleSystem1.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0);\r\n    particleSystem1.color1 = new BABYLON.Color4(Math.random(), Math.random(), Math.random(), 1.0);\r\n    particleSystem1.color2 = new BABYLON.Color4(Math.random(), Math.random(), Math.random(), 1.0);\r\n    particleSystem1.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);\r\n\r\n    particleSystem1.subEmitters = [];\r\n    particleSystem1.minSize = 1;\r\n    particleSystem1.maxSize = 3;\r\n    particleSystem1.minLifeTime = 0.6;\r\n    particleSystem1.maxLifeTime = 1;\r\n    particleSystem1.manualEmitCount = 60;\r\n    particleSystem1.disposeOnStop = true;\r\n    particleSystem1.blendMode = BABYLON.ParticleSystem.BLENDMODE_ONEONE;\r\n    particleSystem1.minAngularSpeed = 0;\r\n    particleSystem1.maxAngularSpeed = Math.PI * 2;\r\n    particleSystem1.minEmitPower = 5;\r\n    particleSystem1.maxEmitPower = 6;\r\n    particleSystem1.updateSpeed = 0.005;\r\n    particleSystem1.gravity = new BABYLON.Vector3(0, -3, 0);\r\n    particleSystem1.type = BABYLON.SubEmitterType.ATTACHED;\r\n    particleSystem1.inheritDirection = true;\r\n    particleSystem1.disposeOnStop = true;\r\n    return particleSystem1;\r\n  }\r\n\r\n  // Explosion particle systems\r\n  function explode() {\r\n    // Create moving emitter for plume\r\n    const emitterParent = new BABYLON.MeshBuilder.CreateBox(\"emitterParent\", { size: 0.001 }, scene);\r\n\r\n    // Animate plume from explosion\r\n    const rocketAnimation = new BABYLON.Animation(\r\n      \"rocketAnimation\",\r\n      \"position.y\",\r\n      60,\r\n      BABYLON.Animation.ANIMATIONTYPE_FLOAT,\r\n      BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT\r\n    );\r\n\r\n    // Animation keys and values\r\n    const keys = [];\r\n    keys.push({\r\n      frame: 0,\r\n      value: 0,\r\n    });\r\n\r\n    keys.push({\r\n      frame: 10,\r\n      value: 3,\r\n    });\r\n\r\n    keys.push({\r\n      frame: 30,\r\n      value: 9,\r\n    });\r\n\r\n    keys.push({\r\n      frame: 50,\r\n      value: 11,\r\n    });\r\n\r\n    keys.push({\r\n      frame: 55,\r\n      value: 11.5,\r\n    });\r\n\r\n    keys.push({\r\n      frame: 60,\r\n      value: 12,\r\n    });\r\n\r\n    // Adding keys to the emitter animation\r\n    rocketAnimation.setKeys(keys);\r\n\r\n    // Add animation to emitter\r\n    emitterParent.animations.push(rocketAnimation);\r\n\r\n    // Start animation for emitter\r\n    scene.beginAnimation(emitterParent, 0, 60, false, 1, function () {\r\n      destroyEmitter(emitterParent);\r\n\r\n      setTimeout(() => {\r\n        launchBarrel();\r\n      }, 2500);\r\n    });\r\n\r\n    const debris = BABYLON.ParticleHelper.CreateDefault(BABYLON.Vector3.Zero(), 100);\r\n    // const debris = BABYLON.ParticleHelper.CreateDefault(scene, \"explosion\");\r\n\r\n    debris.emitRate = 100;\r\n    debris.minSize = 0.5;\r\n    debris.maxSize = 0.8;\r\n    debris.minLifeTime = 1.2;\r\n    debris.maxLifeTime = 1.2;\r\n    debris.minEmitPower = 16;\r\n    debris.maxEmitPower = 30;\r\n    debris.gravity = new BABYLON.Vector3(0, -20, 0);\r\n    debris.disposeOnStop = true;\r\n\r\n    // Sub emitters\r\n    const fireSubEmitter = new BABYLON.SubEmitter(BABYLON.ParticleHelper.CreateDefault(BABYLON.Vector3.Zero(), 200));\r\n    setupAnimationSheet(\r\n      fireSubEmitter.particleSystem,\r\n      \"https://raw.githubusercontent.com/PatrickRyanMS/BabylonJStextures/master/ParticleSystems/Explosion/FlameBlastSpriteSheet.png\",\r\n      1024,\r\n      1024,\r\n      4,\r\n      4,\r\n      1,\r\n      false\r\n    );\r\n\r\n    fireSubEmitter.particleSystem.emitter = new BABYLON.AbstractMesh(\"\", scene);\r\n    fireSubEmitter.particleSystem.minLifeTime = 0.5;\r\n    fireSubEmitter.particleSystem.maxLifeTime = 0.8;\r\n    fireSubEmitter.particleSystem.minEmitPower = 0;\r\n    fireSubEmitter.particleSystem.maxEmitPower = 0;\r\n    fireSubEmitter.particleSystem.emitRate = 130;\r\n    fireSubEmitter.particleSystem.minSize = 0.8;\r\n    fireSubEmitter.particleSystem.maxSize = 1.2;\r\n    fireSubEmitter.particleSystem.addStartSizeGradient(0, 1);\r\n    fireSubEmitter.particleSystem.addStartSizeGradient(0.7, 1);\r\n    fireSubEmitter.particleSystem.addStartSizeGradient(1, 0.2);\r\n    fireSubEmitter.particleSystem.targetStopDuration = 3;\r\n    fireSubEmitter.particleSystem.minInitialRotation = -(Math.PI / 2);\r\n    fireSubEmitter.particleSystem.maxInitialRotation = Math.PI / 2;\r\n    fireSubEmitter.particleSystem.addColorGradient(0.0, new BABYLON.Color4(0.9245, 0.654, 0.0915, 1));\r\n    fireSubEmitter.particleSystem.addColorGradient(0.04, new BABYLON.Color4(0.9062, 0.6132, 0.0942, 1));\r\n    fireSubEmitter.particleSystem.addColorGradient(0.29, new BABYLON.Color4(0.7968, 0.3685, 0.1105, 1));\r\n    fireSubEmitter.particleSystem.addColorGradient(0.53, new BABYLON.Color4(0.6886, 0.1266, 0.1266, 1));\r\n    fireSubEmitter.particleSystem.addColorGradient(0.9, new BABYLON.Color4(0.3113, 0.0367, 0.0367, 1));\r\n    fireSubEmitter.particleSystem.addColorGradient(1.0, new BABYLON.Color4(0.3113, 0.0367, 0.0367, 1));\r\n    fireSubEmitter.type = BABYLON.SubEmitterType.ATTACHED;\r\n    fireSubEmitter.inheritDirection = true;\r\n    fireSubEmitter.particleSystem.blendMode = BABYLON.ParticleSystem.BLENDMODE_ADD;\r\n    fireSubEmitter.particleSystem.disposeOnStop = true;\r\n\r\n    debris.subEmitters = [fireSubEmitter, createSystem()];\r\n    debris.targetStopDuration = 0.2;\r\n    debris.renderingGroupId = 1;\r\n    debris.start();\r\n  }\r\n\r\n  function destroyEmitter(meshToDestoy) {\r\n    meshToDestoy.dispose();\r\n  }\r\n\r\n  return scene;\r\n}\r\n"],"names":["async","createScene","engine","canvas","BABYLON","scene","Scene","time","registerBeforeRender","r","Math","sin","g","PI","b","clearColor","Color4","camera","ArcRotateCamera","Tools","ToRadians","Vector3","Zero","setTarget","alpha","beta","radius","inertia","wheelDeltaPercentage","panningSensibility","minZ","maxZ","upperBetaLimit","attachControl","useAutoRotationBehavior","autoRotationBehavior","idleRotationSpeed","HemisphericLight","intensity","gravityVector","physicsPlugin","AmmoJSPlugin","enablePhysics","pipeline","DefaultRenderingPipeline","imageProcessingConfiguration","toneMappingEnabled","toneMappingType","ImageProcessingConfiguration","TONEMAPPING_ACES","exposure","bloomEnabled","bloomThreshold","bloomWeight","bloomKernel","bloomScale","noiseTexture1","NoiseProceduralTexture","animationSpeedFactor","persistence","brightness","octaves","onKeyboardObservable","add","kbInfo","type","KeyboardEventTypes","KEYDOWN","event","code","launchBarrel","PS_State","flag","console","log","count","isExploded","interval","setInterval","emitterParent","MeshBuilder","CreateBox","size","rocketAnimation","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","keys","push","frame","value","setKeys","animations","beginAnimation","dispose","setTimeout","debris","ParticleHelper","CreateDefault","emitRate","minSize","maxSize","minLifeTime","maxLifeTime","minEmitPower","maxEmitPower","gravity","disposeOnStop","fireSubEmitter","SubEmitter","system","texture","width","height","numSpritesWidth","numSpritesHeight","animationSpeed","isRandom","isAnimationSheetEnabled","particleTexture","Texture","spriteCellWidth","spriteCellHeight","numberCells","startSpriteCellID","endSpriteCellID","spriteCellChangeSpeed","spriteRandomStartCell","updateSpeed","setupAnimationSheet","particleSystem","emitter","AbstractMesh","addStartSizeGradient","targetStopDuration","minInitialRotation","maxInitialRotation","addColorGradient","SubEmitterType","ATTACHED","inheritDirection","blendMode","ParticleSystem","BLENDMODE_ADD","subEmitters","createSystem","renderingGroupId","start","explode","particleSystem1","createSphereEmitter","color1","random","color2","colorDead","manualEmitCount","BLENDMODE_ONEONE","minAngularSpeed","maxAngularSpeed","clearInterval"],"sourceRoot":""}