{"version":3,"file":"static/js/165.6b01f73c.chunk.js","mappings":"sGAAOA,eAAeC,EAAYC,EAAQC,EAAQC,GAChD,MAAMC,EAAQ,IAAID,EAAQE,MAAMJ,GAChCG,EAAME,sBAAuB,EAC7BF,EAAMG,WAAa,IAAIJ,EAAQK,OAAO,IAAM,IAAM,KAEnC,IAAIL,EAAQM,gBAAgB,WAAYC,KAAKC,GAAK,EAAGD,KAAKC,GAAK,EAAG,EAAGR,EAAQS,QAAQC,OAAQT,GACrGU,cAAcZ,GAAQ,GAEf,IAAIC,EAAQY,iBAAiB,SAAU,IAAIZ,EAAQS,QAAQ,EAAG,EAAG,GAAIR,GAYrE,CACZ,CAAEY,SAAU,EAAKC,MAAOd,EAAQe,OAAOC,QAASC,MAAO,GACvD,CAAEJ,SAAU,GAAKC,MAAOd,EAAQe,OAAOG,OAAQD,MAAO,GACtD,CAAEJ,SAAU,GAAKC,MAAOd,EAAQe,OAAOI,MAAOF,MAAO,GACrD,CAAEJ,SAAU,GAAKC,MAAOd,EAAQe,OAAOK,SAAUH,MAAO,GACxD,CAAEJ,SAAU,GAAKC,MAAOd,EAAQe,OAAOM,QAASJ,MAAO,IAGnDK,SAAQ,CAACC,EAAUC,KACvB,MAAMC,EAlBWC,EAACC,EAAMd,EAAUC,KAClC,MAAMW,EAAOzB,EAAQ4B,YAAYC,WAAWF,EAAM,CAAEG,OAAQjB,EAAW,EAAGkB,aAAc,GAAIC,gBAAiBhC,EAAQiC,KAAKC,YAAcjC,GAClIkC,EAAW,IAAInC,EAAQoC,iBAAiBT,EAAO,MAAO1B,GAI5D,OAHAkC,EAASE,aAAevB,EACxBW,EAAKU,SAAWA,EAChBV,EAAKa,SAASC,EAAI,IACXd,CAAI,EAYEC,CAAW,OAASF,EAAOD,EAASV,SAAUU,EAAST,OACpEW,EAAKe,SAAW,CAAEvB,MAAOM,EAASN,OAClCQ,EAAKa,SAASC,EAAa,KAARf,CAAY,IAIjC,MAAMiB,EAAkBzC,EAAQ0C,IAAIC,uBAAuBC,mBAAmB,MAExEC,EAAY,IAAI7C,EAAQ0C,IAAII,UAqBlC,OApBAD,EAAUE,KAAO,sBACjBF,EAAU/B,MAAQ,QAClB+B,EAAUG,SAAW,GACrBP,EAAgBQ,WAAWJ,GAG3B5C,EAAMiD,oBAAoBC,KAAI,SAAUC,GACtC,GAAIA,EAAIC,OAASrD,EAAQsD,kBAAkBC,YAAa,CACtD,MAAMC,EAAaJ,EAAIK,SACvB,GAAID,EAAWE,IAAK,CAClB,MAAMC,EAAaH,EAAWG,WAC1BA,EAAWnB,UAAYmB,EAAWnB,SAASvB,MAC7C4B,EAAUE,KAAO,UAAYY,EAAWnB,SAASvB,MAEjD4B,EAAUE,KAAO,QAErB,CACF,CACF,IAEO9C,CACT,C","sources":["babylon/archeryTarget.js"],"sourcesContent":["export async function createScene(engine, canvas, BABYLON) {\r\n  const scene = new BABYLON.Scene(engine);\r\n  scene.useRightHandedSystem = true;\r\n  scene.clearColor = new BABYLON.Color4(0.95, 0.69, 0.69);\r\n\r\n  const camera = new BABYLON.ArcRotateCamera(\"camera1\", -Math.PI / 2, Math.PI / 2, 2, BABYLON.Vector3.Zero(), scene);\r\n  camera.attachControl(canvas, true);\r\n\r\n  const light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), scene);\r\n\r\n  // Create target rings\r\n  const createRing = (name, diameter, color) => {\r\n    const ring = BABYLON.MeshBuilder.CreateDisc(name, { radius: diameter / 2, tessellation: 64, sideOrientation: BABYLON.Mesh.DOUBLESIDE }, scene);\r\n    const material = new BABYLON.StandardMaterial(name + \"Mat\", scene);\r\n    material.diffuseColor = color;\r\n    ring.material = material;\r\n    ring.position.z = 0.01; // Slightly offset each ring to prevent z-fighting\r\n    return ring;\r\n  };\r\n\r\n  const rings = [\r\n    { diameter: 1.0, color: BABYLON.Color3.Black(), score: 1 },\r\n    { diameter: 0.8, color: BABYLON.Color3.Blue(), score: 2 },\r\n    { diameter: 0.6, color: BABYLON.Color3.Red(), score: 3 },\r\n    { diameter: 0.4, color: BABYLON.Color3.Yellow(), score: 4 },\r\n    { diameter: 0.2, color: BABYLON.Color3.Green(), score: 5 },\r\n  ];\r\n\r\n  rings.forEach((ringData, index) => {\r\n    const ring = createRing(\"ring\" + index, ringData.diameter, ringData.color);\r\n    ring.metadata = { score: ringData.score };\r\n    ring.position.z = -index * 0.01;\r\n  });\r\n\r\n  // Create GUI\r\n  const advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n  const textBlock = new BABYLON.GUI.TextBlock();\r\n  textBlock.text = \"Click on the target\";\r\n  textBlock.color = \"white\";\r\n  textBlock.fontSize = 24;\r\n  advancedTexture.addControl(textBlock);\r\n\r\n  // Click event handler\r\n  scene.onPointerObservable.add(function (evt) {\r\n    if (evt.type === BABYLON.PointerEventTypes.POINTERPICK) {\r\n      const pickResult = evt.pickInfo;\r\n      if (pickResult.hit) {\r\n        const pickedMesh = pickResult.pickedMesh;\r\n        if (pickedMesh.metadata && pickedMesh.metadata.score) {\r\n          textBlock.text = \"Score: \" + pickedMesh.metadata.score;\r\n        } else {\r\n          textBlock.text = \"Missed\";\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return scene;\r\n}\r\n"],"names":["async","createScene","engine","canvas","BABYLON","scene","Scene","useRightHandedSystem","clearColor","Color4","ArcRotateCamera","Math","PI","Vector3","Zero","attachControl","HemisphericLight","diameter","color","Color3","Black","score","Blue","Red","Yellow","Green","forEach","ringData","index","ring","createRing","name","MeshBuilder","CreateDisc","radius","tessellation","sideOrientation","Mesh","DOUBLESIDE","material","StandardMaterial","diffuseColor","position","z","metadata","advancedTexture","GUI","AdvancedDynamicTexture","CreateFullscreenUI","textBlock","TextBlock","text","fontSize","addControl","onPointerObservable","add","evt","type","PointerEventTypes","POINTERPICK","pickResult","pickInfo","hit","pickedMesh"],"sourceRoot":""}