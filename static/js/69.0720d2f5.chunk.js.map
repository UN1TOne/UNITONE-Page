{"version":3,"file":"static/js/69.0720d2f5.chunk.js","mappings":"qGAAOA,eAAeC,EAAYC,EAAQC,EAAQC,GAEhD,IAAIC,EAAQ,IAAID,EAAQE,MAAMJ,GAC9BG,EAAME,WAAaH,EAAQI,OAAOC,cAAc,aAGhD,IAcIC,EAAOC,EAdPC,EAAS,IAAIR,EAAQS,WAAW,UAAW,IAAIT,EAAQU,QAAQ,EAAG,GAAI,GAAIT,GAG9EO,EAAOG,UAAUX,EAAQU,QAAQE,QAGjCJ,EAAOK,cAAcd,GAAQ,GAGjB,IAAIC,EAAQc,iBAAiB,QAAS,IAAId,EAAQU,QAAQ,EAAG,EAAG,GAAIT,GAG1Ec,UAAY,GAIlB,MAAMC,EAAO,4DA0Cb,OAxCAhB,EAAQiB,YAAYC,gBAAgB,GAAIF,EAAO,gBAAiB,GAAIf,GACjEkB,MAAK,SAAUC,GAMd,OALAd,EAAQc,EAAQC,OAAO,IACjBC,QAAQC,aAAa,GAC3BjB,EAAMkB,SAAW,IAAIxB,EAAQU,QAAQ,EAAG,EAAG,GAGpCV,EAAQiB,YAAYC,gBAAgB,GAAIF,EAAO,YAAa,GAAIf,EACzE,IACCkB,MAAK,SAAUM,IACdlB,EAAQkB,EAAQJ,OAAO,IACjBG,SAAW,IAAIxB,EAAQU,QAAQ,EAAG,EAAG,GAC3CH,EAAMe,QAAQC,aAAa,GAC3BhB,EAAMmB,iBAAiBC,SAASC,IAC9BA,EAAEC,WAAa,CAAC,IAIlB,IAAIC,EAAkB9B,EAAQ+B,IAAIC,uBAAuBC,mBAAmB,MACxEC,EAAS,IAAIlC,EAAQ+B,IAAII,OAC7BD,EAAOE,QAAU,EACjBF,EAAOG,QAAU,EACjBH,EAAOI,IAAM,QACbJ,EAAOK,MAAQ,EACfL,EAAOM,OAAS,OAChBN,EAAOO,MAAQ,QACfP,EAAOQ,kBAAoB1C,EAAQ+B,IAAIY,QAAQC,0BAC/CV,EAAOW,yBAAyBC,KAAI,SAAUP,GAC5CjC,EAAMgB,QAAU,IAAItB,EAAQU,QAAQ,EAAY,EAAR6B,EAAW,EAAY,EAARA,EAAW,EAAY,EAARA,GACtEhC,EAAMe,QAAU,IAAItB,EAAQU,QAAQ,EAAI6B,EAAO,EAAIA,EAAO,EAAIA,GAG9DhC,EAAMiB,SAAWxB,EAAQU,QAAQqC,KAAK,IAAI/C,EAAQU,QAAQ,EAAG,EAAG,GAAI,IAAIV,EAAQU,QAAQ,EAAG,EAAG,GAAI6B,GAClGhC,EAAMmB,iBAAiBC,SAASC,IAC9BA,EAAEC,WAAaU,EAAQ,EAAI,EAAI,CAAC,GAEpC,IACAT,EAAgBkB,WAAWd,EAC7B,IAEKjC,CACT,C","sources":["babylon/scalingMorph.js"],"sourcesContent":["export async function createScene(engine, canvas, BABYLON) {\r\n  // This creates a basic Babylon Scene object (non-mesh)\r\n  var scene = new BABYLON.Scene(engine);\r\n  scene.clearColor = BABYLON.Color4.FromHexString(\"#E4DDBBFF\");\r\n\r\n  // This creates and positions a free camera (non-mesh)\r\n  var camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 5, -5), scene);\r\n\r\n  // This targets the camera to scene origin\r\n  camera.setTarget(BABYLON.Vector3.Zero());\r\n\r\n  // This attaches the camera to the canvas\r\n  camera.attachControl(canvas, true);\r\n\r\n  // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n  var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n  // Default intensity is 1. Let's dim the light a small amount\r\n  light.intensity = 0.7;\r\n\r\n  var meshA, meshB;\r\n\r\n  const path = \"https://raw.githubusercontent.com/UN1TOne/3DAsset/master/\";\r\n  // Load the first GLB model\r\n  BABYLON.SceneLoader.ImportMeshAsync(\"\", path + \"hamburger.glb\", \"\", scene)\r\n    .then(function (resultA) {\r\n      meshA = resultA.meshes[0];\r\n      meshA.scaling.scaleInPlace(5);\r\n      meshA.position = new BABYLON.Vector3(0, 0, 0);\r\n\r\n      // Load the second GLB model\r\n      return BABYLON.SceneLoader.ImportMeshAsync(\"\", path + \"pizza.glb\", \"\", scene);\r\n    })\r\n    .then(function (resultB) {\r\n      meshB = resultB.meshes[0];\r\n      meshB.position = new BABYLON.Vector3(0, 0, 0);\r\n      meshB.scaling.scaleInPlace(0);\r\n      meshB.getChildMeshes().forEach((m) => {\r\n        m.visibility = 0;\r\n      });\r\n\r\n      // Create a GUI to control the morphing effect\r\n      var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n      var slider = new BABYLON.GUI.Slider();\r\n      slider.minimum = 0;\r\n      slider.maximum = 1;\r\n      slider.top = \"-70px\";\r\n      slider.value = 0;\r\n      slider.height = \"20px\";\r\n      slider.width = \"200px\";\r\n      slider.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n      slider.onValueChangedObservable.add(function (value) {\r\n        meshA.scaling = new BABYLON.Vector3(5 - value * 5, 5 - value * 5, 5 - value * 5);\r\n        meshB.scaling = new BABYLON.Vector3(5 * value, 5 * value, 5 * value);\r\n\r\n        // Position meshB to match meshA's position\r\n        meshB.position = BABYLON.Vector3.Lerp(new BABYLON.Vector3(0, 0, 0), new BABYLON.Vector3(0, 0, 0), value);\r\n        meshB.getChildMeshes().forEach((m) => {\r\n          m.visibility = value > 0 ? 1 : 0;\r\n        });\r\n      });\r\n      advancedTexture.addControl(slider);\r\n    });\r\n\r\n  return scene;\r\n}\r\n"],"names":["async","createScene","engine","canvas","BABYLON","scene","Scene","clearColor","Color4","FromHexString","meshA","meshB","camera","FreeCamera","Vector3","setTarget","Zero","attachControl","HemisphericLight","intensity","path","SceneLoader","ImportMeshAsync","then","resultA","meshes","scaling","scaleInPlace","position","resultB","getChildMeshes","forEach","m","visibility","advancedTexture","GUI","AdvancedDynamicTexture","CreateFullscreenUI","slider","Slider","minimum","maximum","top","value","height","width","verticalAlignment","Control","VERTICAL_ALIGNMENT_BOTTOM","onValueChangedObservable","add","Lerp","addControl"],"sourceRoot":""}