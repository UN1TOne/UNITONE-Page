{"version":3,"file":"static/js/933.9ea3fb95.chunk.js","mappings":"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","sources":["babylon/navmeshAgent.js"],"sourcesContent":["export async function createScene(engine, canvas, BABYLON) {\r\n  const scene = new BABYLON.Scene(engine);\r\n  console.clear();\r\n  scene.clearColor = new BABYLON.Color4(0.75, 0.75, 0.9);\r\n\r\n  const camera = new BABYLON.ArcRotateCamera(\"camera\", -0.873, 1, 14, BABYLON.Vector3.Zero(), scene);\r\n  camera.attachControl(canvas, true);\r\n\r\n  const light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n\r\n  var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n  advancedTexture.idealWidth = 600;\r\n\r\n  const stepCount = 5;\r\n  const stepHeight = 0.5;\r\n  const stepDepth = 1;\r\n  const stepWidth = 3;\r\n\r\n  const steps = new BABYLON.TransformNode(\"Step\", scene);\r\n  steps.position.y = 0.2;\r\n  steps.position.z = -3.5;\r\n\r\n  for (let i = 0; i < stepCount; i++) {\r\n    const step = BABYLON.MeshBuilder.CreateBox(\r\n      \"step\" + i,\r\n      {\r\n        width: stepWidth,\r\n        height: stepHeight,\r\n        depth: stepDepth,\r\n      },\r\n      scene\r\n    );\r\n    step.position.set(0, i * stepHeight, i * stepDepth);\r\n    step.parent = steps;\r\n  }\r\n\r\n  const ground = BABYLON.MeshBuilder.CreateBox(\r\n    \"ground\",\r\n    {\r\n      width: 8,\r\n      height: 0.1,\r\n      depth: 15,\r\n    },\r\n    scene\r\n  );\r\n  ground.position.y = -0.05;\r\n\r\n  const indicator = new BABYLON.TransformNode(\"Indicator\", scene);\r\n  function createArrow(scene) {\r\n    var indicatorMat = new BABYLON.StandardMaterial(\"indicatorMat\", scene);\r\n    indicatorMat.diffuseColor = new BABYLON.Color3(1, 0.1, 0.25);\r\n\r\n    var arrowBody = BABYLON.MeshBuilder.CreateCylinder(\"arrowBody\", { height: 0.3, diameter: 0.1 }, scene);\r\n    var arrowHead = BABYLON.MeshBuilder.CreateCylinder(\"arrowHead\", { height: 0.15, diameterTop: 0, diameterBottom: 0.2 }, scene);\r\n    arrowHead.position.y = 0.15;\r\n\r\n    arrowBody.material = indicatorMat;\r\n    arrowHead.material = indicatorMat;\r\n\r\n    arrowBody.setParent(indicator);\r\n    arrowHead.setParent(indicator);\r\n\r\n    indicator.position = steps.getChildMeshes()[4].absolutePosition.clone().add(new BABYLON.Vector3(0.2, 0.7, -0.2));\r\n    indicator.rotationQuaternion = BABYLON.Quaternion.RotationAxis(BABYLON.Axis.X, Math.PI);\r\n\r\n    var rect = new BABYLON.GUI.Rectangle(\"Indicator Rect\");\r\n    rect.width = 0.2;\r\n    rect.height = \"30px\";\r\n    rect.width = \"300px\";\r\n    rect.cornerRadius = 12;\r\n    rect.color = \"black\";\r\n    rect.thickness = 0;\r\n    rect.background = \"transparent\";\r\n    advancedTexture.addControl(rect);\r\n    rect.linkWithMesh(indicator);\r\n    rect.linkOffsetY = -40;\r\n\r\n    var label = new BABYLON.GUI.TextBlock(\"Indicator label\");\r\n    label.text = \"Click Here!\";\r\n    label.resizeToFit = true;\r\n    rect.addControl(label);\r\n\r\n    animateIndicator();\r\n  }\r\n  createArrow();\r\n\r\n  var arrowMat = new BABYLON.StandardMaterial(\"arrowMat\", scene);\r\n  arrowMat.diffuseColor = new BABYLON.Color3(0.1, 0.2, 1);\r\n\r\n  var arrowMeshes = [];\r\n\r\n  function createChevron(scene) {\r\n    var chevronShape = [\r\n      new BABYLON.Vector3(-0.2, 0, -0.1),\r\n      new BABYLON.Vector3(0, 0, 0.1),\r\n      new BABYLON.Vector3(0.2, 0, -0.1),\r\n      new BABYLON.Vector3(0, 0, -0.05),\r\n    ];\r\n    var chevronMesh = BABYLON.MeshBuilder.ExtrudePolygon(\"chevron\", { shape: chevronShape, depth: 0.02 }, scene);\r\n    chevronMesh.material = arrowMat;\r\n    chevronMesh.renderingGroupId = 1;\r\n    return chevronMesh;\r\n  }\r\n\r\n  function placeArrows(pathPoints) {\r\n    arrowMeshes.forEach((mesh) => mesh.dispose());\r\n    arrowMeshes = [];\r\n\r\n    let arrowSpacing = 0.4;\r\n\r\n    for (let i = 1; i < pathPoints.length; i++) {\r\n      let prev = pathPoints[i - 1];\r\n      let current = pathPoints[i];\r\n      let segmentLength = BABYLON.Vector3.Distance(prev, current);\r\n      let direction = current.subtract(prev).normalize();\r\n      let stepCount = Math.floor(segmentLength / arrowSpacing);\r\n\r\n      for (let j = 0; j < stepCount; j++) {\r\n        let t = (j + 1) / (stepCount + 1);\r\n        let position = BABYLON.Vector3.Lerp(prev, current, t);\r\n        let chevron = createChevron(scene);\r\n        chevron.position = position;\r\n        let angle = Math.atan2(direction.x, direction.z);\r\n        chevron.rotation.y = angle;\r\n        arrowMeshes.push(chevron);\r\n      }\r\n    }\r\n\r\n    animateArrows();\r\n  }\r\n\r\n  function animateIndicator() {\r\n    let animation = new BABYLON.Animation(\r\n      \"indicator move\",\r\n      \"position\",\r\n      10,\r\n      BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\r\n      BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\r\n    );\r\n\r\n    let keys = [\r\n      { frame: 0, value: indicator.position },\r\n      { frame: 10, value: indicator.position.add(new BABYLON.Vector3(0, 0.5, 0)) },\r\n      { frame: 20, value: indicator.position },\r\n    ];\r\n    animation.setKeys(keys);\r\n\r\n    scene.beginDirectAnimation(indicator, [animation], 0, 20, true);\r\n  }\r\n\r\n  function animateArrows() {\r\n    arrowMeshes.forEach((arrow, index) => {\r\n      let animation = new BABYLON.Animation(\r\n        \"arrowPulse\",\r\n        \"visibility\",\r\n        10,\r\n        BABYLON.Animation.ANIMATIONTYPE_FLOAT,\r\n        BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE\r\n      );\r\n\r\n      let keys = [\r\n        { frame: 0, value: 0.15 },\r\n        { frame: 10, value: 1.0 },\r\n        { frame: 20, value: 0.15 },\r\n      ];\r\n      animation.setKeys(keys);\r\n\r\n      let delay = index * 2;\r\n      scene.beginDirectAnimation(arrow, [animation], delay, 20, true);\r\n    });\r\n  }\r\n\r\n  let navigationPlugin = new BABYLON.RecastJSPlugin();\r\n  var navmeshParameters = {\r\n    cs: 0.2,\r\n    ch: 0.2,\r\n    walkableSlopeAngle: 90,\r\n    walkableHeight: 2,\r\n    walkableClimb: 3,\r\n    walkableRadius: 0.3,\r\n    maxEdgeLen: 0,\r\n    maxSimplificationError: 3.5,\r\n    minRegionArea: 1,\r\n    mergeRegionArea: 15,\r\n    maxVertsPerPoly: 6,\r\n    detailSampleDist: 1,\r\n    detailSampleMaxError: 0.5,\r\n  };\r\n\r\n  navigationPlugin.createNavMesh(\r\n    scene.meshes.filter((mesh) => !mesh.isDescendantOf(indicator)),\r\n    navmeshParameters\r\n  );\r\n  var navmeshdebug = navigationPlugin.createDebugNavMesh(scene);\r\n  navmeshdebug.position = new BABYLON.Vector3(0, 0.01, 0);\r\n\r\n  var matdebug = new BABYLON.StandardMaterial(\"matdebug\", scene);\r\n  matdebug.diffuseColor = new BABYLON.Color3(0.1, 0.2, 1);\r\n  matdebug.alpha = 0.2;\r\n  navmeshdebug.material = matdebug;\r\n\r\n  var agents = [];\r\n  var startingPoint;\r\n  var hasArrived = false;\r\n\r\n  var crowd = navigationPlugin.createCrowd(10, 0.1, scene);\r\n  var i;\r\n  var agentParams = {\r\n    radius: 0.3,\r\n    height: 0.4,\r\n    maxAcceleration: 8.0,\r\n    maxSpeed: 3.0,\r\n    collisionQueryRange: 0.5,\r\n    pathOptimizationRange: 0.0,\r\n    separationWeight: 1.0,\r\n  };\r\n\r\n  for (i = 0; i < 1; i++) {\r\n    var width = 0.2;\r\n    var agentCube = BABYLON.MeshBuilder.CreateBox(\"cube\", { size: width, height: width }, scene);\r\n    var targetCube = BABYLON.MeshBuilder.CreateBox(\"cube\", { size: 0.1, height: 0.1 }, scene);\r\n    var matAgent = new BABYLON.StandardMaterial(\"mat2\", scene);\r\n    var variation = Math.random();\r\n    matAgent.diffuseColor = new BABYLON.Color3(0.4 + variation * 0.6, 0.3, 1.0 - variation * 0.3);\r\n    agentCube.material = matAgent;\r\n    var randomPos = navigationPlugin.getRandomPointAround(new BABYLON.Vector3(-2.0, 0.1, -1.8), 0.5);\r\n    var transform = new BABYLON.TransformNode();\r\n    var agentIndex = crowd.addAgent(randomPos, agentParams, transform);\r\n    agents.push({ idx: agentIndex, trf: transform, mesh: agentCube, target: targetCube });\r\n\r\n    var rect1 = new BABYLON.GUI.Rectangle(\"Agent Rect\");\r\n    rect1.width = 0.2;\r\n    rect1.height = \"20px\";\r\n    rect1.width = \"60px\";\r\n    rect1.cornerRadius = 12;\r\n    rect1.color = \"Orange\";\r\n    rect1.thickness = 4;\r\n    rect1.background = \"green\";\r\n    advancedTexture.addControl(rect1);\r\n    rect1.linkWithMesh(agentCube);\r\n    rect1.linkOffsetY = -60;\r\n\r\n    var label = new BABYLON.GUI.TextBlock(\"Agent TB\");\r\n    label.text = \"Agent\";\r\n    label.resizeToFit = true;\r\n    rect1.addControl(label);\r\n\r\n    var target = new BABYLON.GUI.Ellipse(\"Agent El\");\r\n    target.width = \"4px\";\r\n    target.height = \"4px\";\r\n    target.color = \"Orange\";\r\n    target.thickness = 2;\r\n    target.background = \"green\";\r\n    advancedTexture.addControl(target);\r\n    target.linkWithMesh(agentCube);\r\n\r\n    var line = new BABYLON.GUI.Line(\"Agent Line\");\r\n    line.lineWidth = 2;\r\n    line.color = \"Orange\";\r\n    line.y2 = 8;\r\n    line.linkOffsetY = -1;\r\n    advancedTexture.addControl(line);\r\n    line.linkWithMesh(agentCube);\r\n    line.connectedControl = rect1;\r\n  }\r\n\r\n  var getGroundPosition = function () {\r\n    var pickinfo = scene.pick(scene.pointerX, scene.pointerY);\r\n    if (pickinfo.hit) {\r\n      return pickinfo.pickedPoint;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  var lineMat = new BABYLON.StandardMaterial(\"line\", scene);\r\n  lineMat.emissiveColor = new BABYLON.Color3(0.35, 0.42, 1);\r\n\r\n  var pointerDown = function (mesh) {\r\n    startingPoint = getGroundPosition();\r\n    if (startingPoint) {\r\n      setTimeout(function () {\r\n        camera.detachControl(canvas);\r\n      }, 0);\r\n      var agents = crowd.getAgents();\r\n      var i;\r\n      for (i = 0; i < agents.length; i++) {\r\n        crowd.agentGoto(agents[i], navigationPlugin.getClosestPoint(startingPoint));\r\n      }\r\n      var pathPoints = navigationPlugin.computePath(crowd.getAgentPosition(agents[0]), navigationPlugin.getClosestPoint(startingPoint));\r\n\r\n      if (pathPoints.length > 1) {\r\n        placeArrows(pathPoints);\r\n      }\r\n    }\r\n  };\r\n\r\n  scene.onPointerObservable.add((pointerInfo) => {\r\n    switch (pointerInfo.type) {\r\n      case BABYLON.PointerEventTypes.POINTERDOWN:\r\n        if (pointerInfo.pickInfo.hit) {\r\n          pointerDown(pointerInfo.pickInfo.pickedMesh);\r\n        }\r\n        break;\r\n\r\n      case BABYLON.PointerEventTypes.POINTERUP:\r\n        if (pointerInfo.pickInfo.hit) {\r\n          indicator.dispose();\r\n\r\n          var indicatorRect = advancedTexture.getDescendants().find((control) => control.name === \"Indicator Rect\");\r\n\r\n          if (indicatorRect) indicatorRect.dispose();\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  scene.onBeforeRenderObservable.add(() => {\r\n    var agentCount = agents.length;\r\n    for (let i = 0; i < agentCount; i++) {\r\n      var ag = agents[i];\r\n      ag.mesh.position = crowd.getAgentPosition(ag.idx);\r\n      let vel = crowd.getAgentVelocity(ag.idx);\r\n      crowd.getAgentNextTargetPathToRef(ag.idx, ag.target.position);\r\n\r\n      if (vel.length() > 0.2) {\r\n        vel.normalize();\r\n        var desiredRotation = Math.atan2(vel.x, vel.z);\r\n        ag.mesh.rotation.y = ag.mesh.rotation.y + (desiredRotation - ag.mesh.rotation.y) * 0.05;\r\n      }\r\n\r\n      if (navigationPlugin && startingPoint instanceof BABYLON.Vector3) {\r\n        let targetPosition = navigationPlugin.getClosestPoint(startingPoint);\r\n        if (targetPosition) {\r\n          checkAgentArrival(ag, targetPosition);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  function checkAgentArrival(agentIndex, targetPosition) {\r\n    let agentPosition = crowd.getAgentPosition(agentIndex);\r\n    let distance = BABYLON.Vector3.Distance(agentPosition, targetPosition);\r\n    if (distance < 0.1) {\r\n      // console.log(\"Agent has reached the destination!\");\r\n      arrowMeshes.forEach((mesh) => mesh.dispose());\r\n      arrowMeshes = [];\r\n\r\n      let referencePosition = steps.getChildMeshes()[4].absolutePosition;\r\n      if (compareDist(agentPosition, referencePosition)) {\r\n        if (!hasArrived) {\r\n          alert(\"🎉 Well Done 🎉\");\r\n          hasArrived = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function compareDist(targetPosition, referencePosition, threshold = 1) {\r\n    return BABYLON.Vector3.Distance(targetPosition, referencePosition) <= threshold;\r\n  }\r\n\r\n  return scene;\r\n}\r\n"],"names":["async","createScene","engine","canvas","BABYLON","scene","Scene","console","clear","clearColor","Color4","camera","ArcRotateCamera","Vector3","Zero","attachControl","HemisphericLight","advancedTexture","GUI","AdvancedDynamicTexture","CreateFullscreenUI","idealWidth","steps","TransformNode","position","y","z","i","step","MeshBuilder","CreateBox","width","height","depth","set","parent","indicator","indicatorMat","StandardMaterial","diffuseColor","Color3","arrowBody","CreateCylinder","diameter","arrowHead","diameterTop","diameterBottom","material","setParent","getChildMeshes","absolutePosition","clone","add","rotationQuaternion","Quaternion","RotationAxis","Axis","X","Math","PI","rect","Rectangle","cornerRadius","color","thickness","background","addControl","linkWithMesh","linkOffsetY","label","TextBlock","text","resizeToFit","animateIndicator","createArrow","arrowMat","arrowMeshes","createChevron","chevronShape","chevronMesh","ExtrudePolygon","shape","renderingGroupId","placeArrows","pathPoints","forEach","mesh","dispose","length","prev","current","segmentLength","Distance","direction","subtract","normalize","stepCount","floor","j","t","Lerp","chevron","angle","atan2","x","rotation","push","arrow","index","animation","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CYCLE","keys","frame","value","setKeys","delay","beginDirectAnimation","ANIMATIONTYPE_VECTOR3","navigationPlugin","RecastJSPlugin","createNavMesh","meshes","filter","isDescendantOf","cs","ch","walkableSlopeAngle","walkableHeight","walkableClimb","walkableRadius","maxEdgeLen","maxSimplificationError","minRegionArea","mergeRegionArea","maxVertsPerPoly","detailSampleDist","detailSampleMaxError","navmeshdebug","createDebugNavMesh","matdebug","alpha","startingPoint","agents","hasArrived","crowd","createCrowd","agentParams","radius","maxAcceleration","maxSpeed","collisionQueryRange","pathOptimizationRange","separationWeight","agentCube","size","targetCube","matAgent","variation","random","randomPos","getRandomPointAround","transform","agentIndex","addAgent","idx","trf","target","rect1","Ellipse","line","Line","lineWidth","y2","connectedControl","emissiveColor","pointerDown","pickinfo","pick","pointerX","pointerY","hit","pickedPoint","getGroundPosition","setTimeout","detachControl","getAgents","agentGoto","getClosestPoint","computePath","getAgentPosition","checkAgentArrival","targetPosition","agentPosition","referencePosition","threshold","arguments","undefined","compareDist","alert","onPointerObservable","pointerInfo","type","PointerEventTypes","POINTERDOWN","pickInfo","pickedMesh","POINTERUP","indicatorRect","getDescendants","find","control","name","onBeforeRenderObservable","agentCount","ag","vel","getAgentVelocity","getAgentNextTargetPathToRef","desiredRotation"],"sourceRoot":""}