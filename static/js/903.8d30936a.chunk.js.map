{"version":3,"file":"static/js/903.8d30936a.chunk.js","mappings":"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","sources":["babylon/meshDrag.js"],"sourcesContent":["export async function createScene(engine, canvas, BABYLON) {\r\n  console.clear();\r\n  var scene = new BABYLON.Scene(engine);\r\n  scene.useRightHandedSystem = true;\r\n  scene.clearColor = new BABYLON.Color4(0.87, 1, 0.77);\r\n\r\n  scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), new BABYLON.AmmoJSPlugin());\r\n\r\n  var camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 5, -10), scene);\r\n  camera.setTarget(BABYLON.Vector3.Zero());\r\n  camera.attachControl(canvas, true);\r\n  camera.inputs.clear();\r\n\r\n  var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  light.intensity = 0.7;\r\n\r\n  const ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width: 10, height: 10 }, scene);\r\n  ground.physicsImpostor = new BABYLON.PhysicsImpostor(ground, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.9 }, scene);\r\n\r\n  const box = BABYLON.MeshBuilder.CreateBox(\"box\", {}, scene);\r\n  box.position.y = 2;\r\n  box.physicsImpostor = new BABYLON.PhysicsImpostor(box, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 1, restitution: 0.5, friction: 1 }, scene);\r\n\r\n  const outerCylinder = BABYLON.MeshBuilder.CreateCylinder(\"outerCylinder\", { diameter: 2, height: 1.5, tessellation: 32 }, scene);\r\n  outerCylinder.position = new BABYLON.Vector3(3, 0.75, 0);\r\n\r\n  const innerCylinder = BABYLON.MeshBuilder.CreateCylinder(\"innerCylinder\", { diameter: 1.8, height: 1.6, tessellation: 32 }, scene);\r\n  innerCylinder.position = new BABYLON.Vector3(3, 0.75, 0);\r\n\r\n  var outerCSG = BABYLON.CSG.FromMesh(outerCylinder);\r\n  var innerCSG = BABYLON.CSG.FromMesh(innerCylinder);\r\n\r\n  var subtractedCSG = outerCSG.subtract(innerCSG);\r\n  var trashCan = subtractedCSG.toMesh(\"trashCan\", new BABYLON.StandardMaterial(\"mat\", scene), scene);\r\n\r\n  if (!trashCan) {\r\n    console.error(\"CSG Failed\");\r\n    return scene;\r\n  }\r\n\r\n  trashCan.position = outerCylinder.position;\r\n  trashCan.visibility = 0.9;\r\n\r\n  outerCylinder.dispose();\r\n  innerCylinder.dispose();\r\n\r\n  trashCan.physicsImpostor = new BABYLON.PhysicsImpostor(trashCan, BABYLON.PhysicsImpostor.MeshImpostor, { mass: 0, restitution: 0 }, scene);\r\n\r\n  const trashCan2 = trashCan.clone(\"trashCan2\", null);\r\n  trashCan2.position.x = -3;\r\n  trashCan2.physicsImpostor = new BABYLON.PhysicsImpostor(trashCan2, BABYLON.PhysicsImpostor.MeshImpostor, { mass: 0, restitution: 0 }, scene);\r\n\r\n  const bottomCylinder = BABYLON.MeshBuilder.CreateCylinder(\"bottomeCylinder\", { diameter: 1.8, height: 0.1, tessellation: 32 }, scene);\r\n  bottomCylinder.position = new BABYLON.Vector3(3, 0.1, 0);\r\n  bottomCylinder.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n    bottomCylinder,\r\n    BABYLON.PhysicsImpostor.CylinderImpostor,\r\n    { mass: 0, restitution: 0, friction: 1 },\r\n    scene\r\n  );\r\n\r\n  const bottomCylinder2 = bottomCylinder.clone(\"bottomeCylinder2\", null);\r\n  bottomCylinder2.position.x = -3;\r\n  bottomCylinder2.physicsImpostor = new BABYLON.PhysicsImpostor(\r\n    bottomCylinder2,\r\n    BABYLON.PhysicsImpostor.CylinderImpostor,\r\n    { mass: 0, restitution: 0, friction: 1 },\r\n    scene\r\n  );\r\n\r\n  let isInTrashCan = false;\r\n  let isInTrashCan2 = false;\r\n  let boxCollidedWithBottomCylinder = false;\r\n  let boxCollidedWithBottomCylinder2 = false;\r\n  let boxCollidedWithGround = false;\r\n\r\n  box.physicsImpostor.registerOnPhysicsCollide(bottomCylinder.physicsImpostor, function (main, collided) {\r\n    if (!isInTrashCan && !boxCollidedWithBottomCylinder) {\r\n      console.log(\"Box in the trashCan\");\r\n      isInTrashCan = true;\r\n      isInTrashCan2 = false;\r\n\r\n      boxCollidedWithBottomCylinder = true;\r\n      boxCollidedWithBottomCylinder2 = false;\r\n      boxCollidedWithGround = false;\r\n\r\n      setParticle();\r\n    }\r\n  });\r\n\r\n  box.physicsImpostor.registerOnPhysicsCollide(bottomCylinder2.physicsImpostor, function (main, collided) {\r\n    if (!isInTrashCan && !boxCollidedWithBottomCylinder2) {\r\n      console.log(\"Box in the trashCan2\");\r\n      isInTrashCan = false;\r\n      isInTrashCan2 = true;\r\n\r\n      boxCollidedWithBottomCylinder = false;\r\n      boxCollidedWithBottomCylinder2 = true;\r\n      boxCollidedWithGround = false;\r\n\r\n      setParticle();\r\n    }\r\n  });\r\n\r\n  box.physicsImpostor.registerOnPhysicsCollide(ground.physicsImpostor, function (main, collided) {\r\n    if ((isInTrashCan || isInTrashCan2) && !boxCollidedWithGround) {\r\n      console.log(\"Box out of the trashCan\");\r\n      isInTrashCan = false;\r\n      isInTrashCan2 = false;\r\n\r\n      boxCollidedWithBottomCylinder = false;\r\n      boxCollidedWithBottomCylinder2 = false;\r\n      boxCollidedWithGround = true;\r\n    }\r\n  });\r\n\r\n  function setParticle() {\r\n    const tex = new BABYLON.Texture(\"https://raw.githubusercontent.com/UN1TOne/3DAsset/master/Images/paper.png\");\r\n    tex.hasAlpha = true;\r\n\r\n    const confettiSystem = new BABYLON.ParticleSystem(\"confetti\", 500, scene);\r\n    confettiSystem.blendMode = 2;\r\n    confettiSystem.particleTexture = tex;\r\n\r\n    confettiSystem.emitter = new BABYLON.Vector3(0, 5, 0);\r\n    confettiSystem.minEmitBox = new BABYLON.Vector3(-10, 0, -10);\r\n    confettiSystem.maxEmitBox = new BABYLON.Vector3(10, 0, 10);\r\n\r\n    confettiSystem.color1 = new BABYLON.Color4(1, 0, 0, 1);\r\n    confettiSystem.color2 = new BABYLON.Color4(0, 1, 0, 1);\r\n    confettiSystem.colorDead = new BABYLON.Color4(0, 0, 1, 0);\r\n\r\n    confettiSystem.minSize = 0.2;\r\n    confettiSystem.maxSize = 0.5;\r\n\r\n    confettiSystem.minLifeTime = 2;\r\n    confettiSystem.maxLifeTime = 4;\r\n\r\n    confettiSystem.emitRate = 500;\r\n\r\n    confettiSystem.gravity = new BABYLON.Vector3(0, -9.81, 0);\r\n\r\n    confettiSystem.direction1 = new BABYLON.Vector3(-1, -1, -1);\r\n    confettiSystem.direction2 = new BABYLON.Vector3(1, -1, 1);\r\n\r\n    confettiSystem.minAngularSpeed = 0;\r\n    confettiSystem.maxAngularSpeed = Math.PI;\r\n\r\n    confettiSystem.minEmitPower = 1;\r\n    confettiSystem.maxEmitPower = 3;\r\n\r\n    confettiSystem.updateSpeed = 0.01;\r\n\r\n    confettiSystem.renderingGroupId = 1;\r\n\r\n    confettiSystem.start();\r\n\r\n    setTimeout(() => {\r\n      confettiSystem.stop();\r\n    }, 1500);\r\n  }\r\n\r\n  let isDragging = false;\r\n  let pickedMesh = null;\r\n  let startingPoint = null;\r\n\r\n  var getGroundPosition = function (evt) {\r\n    var pickinfo = scene.pick(scene.pointerX, scene.pointerY, function (mesh) {\r\n      return mesh === ground;\r\n    });\r\n    if (pickinfo.hit) {\r\n      return pickinfo.pickedPoint;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  scene.onPointerDown = function (evt, pickResult) {\r\n    if (pickResult.hit && pickResult.pickedMesh === box) {\r\n      isDragging = true;\r\n      pickedMesh = pickResult.pickedMesh;\r\n      startingPoint = getGroundPosition(evt);\r\n      if (startingPoint) {\r\n        pickedMesh.physicsImpostor.sleep();\r\n        pickedMesh.physicsImpostor.mass = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  scene.onPointerUp = function () {\r\n    if (isDragging && pickedMesh) {\r\n      pickedMesh.physicsImpostor.wakeUp();\r\n      pickedMesh.physicsImpostor.mass = 1;\r\n\r\n      isDragging = false;\r\n      pickedMesh = null;\r\n      startingPoint = null;\r\n    }\r\n  };\r\n\r\n  scene.onPointerMove = function (evt) {\r\n    if (!startingPoint) {\r\n      return;\r\n    }\r\n    var pickResult = scene.pick(scene.pointerX, scene.pointerY, function (mesh) {\r\n      return mesh === ground;\r\n    });\r\n    if (!pickResult.hit) {\r\n      return;\r\n    }\r\n\r\n    var current = pickResult.pickedPoint;\r\n    if (pickedMesh && isDragging) {\r\n      pickedMesh.position.x = current.x;\r\n      pickedMesh.position.y = current.y + 3;\r\n      pickedMesh.position.z = 0;\r\n      // pickedMesh.physicsImpostor.setLinearVelocity(new BABYLON.Vector3(0, 0, 0));\r\n      pickedMesh.physicsImpostor.setAngularVelocity(new BABYLON.Vector3(0, 0, 0));\r\n      pickedMesh.physicsImpostor.forceUpdate();\r\n    }\r\n  };\r\n\r\n  return scene;\r\n}\r\n"],"names":["async","createScene","engine","canvas","BABYLON","console","clear","scene","Scene","useRightHandedSystem","clearColor","Color4","enablePhysics","Vector3","AmmoJSPlugin","camera","FreeCamera","setTarget","Zero","attachControl","inputs","HemisphericLight","intensity","ground","MeshBuilder","CreateGround","width","height","physicsImpostor","PhysicsImpostor","BoxImpostor","mass","restitution","box","CreateBox","position","y","friction","outerCylinder","CreateCylinder","diameter","tessellation","innerCylinder","outerCSG","CSG","FromMesh","innerCSG","trashCan","subtract","toMesh","StandardMaterial","error","visibility","dispose","MeshImpostor","trashCan2","clone","x","bottomCylinder","CylinderImpostor","bottomCylinder2","isInTrashCan","isInTrashCan2","boxCollidedWithBottomCylinder","boxCollidedWithBottomCylinder2","boxCollidedWithGround","setParticle","tex","Texture","hasAlpha","confettiSystem","ParticleSystem","blendMode","particleTexture","emitter","minEmitBox","maxEmitBox","color1","color2","colorDead","minSize","maxSize","minLifeTime","maxLifeTime","emitRate","gravity","direction1","direction2","minAngularSpeed","maxAngularSpeed","Math","PI","minEmitPower","maxEmitPower","updateSpeed","renderingGroupId","start","setTimeout","stop","registerOnPhysicsCollide","main","collided","log","isDragging","pickedMesh","startingPoint","onPointerDown","evt","pickResult","hit","pickinfo","pick","pointerX","pointerY","mesh","pickedPoint","getGroundPosition","sleep","onPointerUp","wakeUp","onPointerMove","current","z","setAngularVelocity","forceUpdate"],"sourceRoot":""}