{"version":3,"file":"static/js/429.d5a87d50.chunk.js","mappings":"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","sources":["babylon/multiSelection.js"],"sourcesContent":["export async function createScene(engine, canvas, BABYLON) {\r\n  // console.clear();\r\n\r\n  var scene = new BABYLON.Scene(engine);\r\n  scene.clearColor = new BABYLON.Color4(0.84, 0.84, 0.84);\r\n  scene.useRightHandedSystem = true;\r\n\r\n  var camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 8, new BABYLON.Vector3(0, 0, 0), scene);\r\n  camera.setTarget(BABYLON.Vector3.Zero());\r\n\r\n  var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  light.intensity = 0.7;\r\n\r\n  const meshLoad1 = await BABYLON.SceneLoader.ImportMeshAsync(\r\n    \"\",\r\n    \"https://raw.githubusercontent.com/UN1TOne/3DAsset/master/\",\r\n    \"ship_repair_dock_-_starcraft_2.glb\",\r\n    scene\r\n  );\r\n  const model1 = meshLoad1.meshes[0];\r\n  model1.name = \"model1\";\r\n  model1.scaling.scaleInPlace(0.1);\r\n\r\n  const meshLoad2 = await BABYLON.SceneLoader.ImportMeshAsync(\"\", \"https://raw.githubusercontent.com/UN1TOne/3DAsset/master/\", \"shibahu.glb\", scene);\r\n  const model2 = meshLoad2.meshes[0];\r\n  model2.name = \"model2\";\r\n  model2.position = new BABYLON.Vector3(-2, -2, 0);\r\n\r\n  const meshLoad3 = await BABYLON.SceneLoader.ImportMeshAsync(\r\n    \"\",\r\n    \"https://raw.githubusercontent.com/UN1TOne/3DAsset/master/\",\r\n    \"undead_house.glb\",\r\n    scene\r\n  );\r\n  const model3 = meshLoad3.meshes[0];\r\n  model3.name = \"model3\";\r\n  model3.scaling.scaleInPlace(0.1);\r\n  model3.position = new BABYLON.Vector3(2, -2, 0);\r\n\r\n  const meshLoad4 = await BABYLON.SceneLoader.ImportMeshAsync(\"\", \"https://raw.githubusercontent.com/UN1TOne/3DAsset/master/\", \"batman.glb\", scene);\r\n  const model4 = meshLoad4.meshes[0];\r\n  model4.name = \"model4\";\r\n  model4.position = new BABYLON.Vector3(-2, 1, 0);\r\n\r\n  const meshLoad5 = await BABYLON.SceneLoader.ImportMeshAsync(\r\n    \"\",\r\n    \"https://raw.githubusercontent.com/UN1TOne/3DAsset/master/\",\r\n    \"metal_slug_tank.glb\",\r\n    scene\r\n  );\r\n  const model5 = meshLoad5.meshes[0];\r\n  model5.name = \"model5\";\r\n  model5.scaling.scaleInPlace(10);\r\n  model5.position = new BABYLON.Vector3(2, 2, 0);\r\n\r\n  // const meshes = [model1, model2, model3, model4, model5];\r\n  // const meshes = scene.meshes;\r\n  const meshes = scene.rootNodes.filter((n) => n.getClassName() === \"Mesh\");\r\n\r\n  const texture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"Drag UI\");\r\n  let isDrag = false;\r\n  let isUsingMultiSelection = true;\r\n  let rect;\r\n  let downX;\r\n  let downY;\r\n  let selectedMeshes = [];\r\n  let gizmoManager;\r\n  let parentMesh;\r\n\r\n  let heirarchy = [];\r\n\r\n  const hl = new BABYLON.HighlightLayer(\"hl1\", scene, {\r\n    // isStroke: true,\r\n    mainTextureRatio: 1,\r\n    blurVerticalSize: 1.5,\r\n    blurHorizontalSize: 1.5,\r\n  });\r\n  hl.innerGlow = false;\r\n\r\n  scene.onPointerDown = function (event, pickResult) {\r\n    if (event.button === 0) {\r\n      if (isUsingMultiSelection && event.button == 0) {\r\n        // meshes.forEach(mesh => mesh.showBoundingBox = false);\r\n        // meshes.forEach(mesh => mesh.renderOutline = false);\r\n        // meshes.forEach(mesh => mesh.getChildMeshes().forEach(m=> m.renderOutline = false));\r\n        meshes.forEach((mesh) => mesh.getChildMeshes().forEach((m) => hl.removeMesh(m)));\r\n\r\n        createGuiRect();\r\n        isDrag = true;\r\n        downX = event.offsetX;\r\n        downY = event.offsetY;\r\n\r\n        selectedMeshes.forEach((mesh) => {\r\n          // mesh.setParent(null);\r\n          const index = heirarchy.findIndex((item) => item.mesh.name === mesh.name);\r\n          if (index !== -1) {\r\n            mesh.setParent(heirarchy[index].parent);\r\n          }\r\n        });\r\n        selectedMeshes = [];\r\n      }\r\n    }\r\n  };\r\n\r\n  scene.onPointerMove = function (event, pickResult) {\r\n    if (isDrag) {\r\n      const currX = event.offsetX;\r\n      const currY = event.offsetY;\r\n\r\n      const topleftX = downX < currX ? downX : currX;\r\n      const topleftY = downY < currY ? downY : currY;\r\n      const botRightX = downX >= currX ? downX : currX;\r\n      const botRightY = downY >= currY ? downY : currY;\r\n      const rectWidth = botRightX - topleftX;\r\n      const rectHeight = botRightY - topleftY;\r\n      const canvasWidth = event.target.getBoundingClientRect().width;\r\n      const canvasHeight = event.target.getBoundingClientRect().height;\r\n      const canvasCenterX = canvasWidth / 2;\r\n      const canvasCenterY = canvasHeight / 2;\r\n      const rectWidthHalf = rectWidth / 2;\r\n      const rectHeightHalf = rectHeight / 2;\r\n      const left = canvasCenterX - topleftX - rectWidthHalf;\r\n      const top = canvasCenterY - topleftY - rectHeightHalf;\r\n\r\n      rect.left = -left;\r\n      rect.top = -top;\r\n      rect.width = `${rectWidth}px`;\r\n      rect.height = `${rectHeight}px`;\r\n    }\r\n  };\r\n\r\n  scene.onPointerUp = function (event, pickResult) {\r\n    if (event.button === 0) {\r\n      if (isUsingMultiSelection) {\r\n        const currX = event.offsetX;\r\n        const currY = event.offsetY;\r\n\r\n        const topleftX = downX < currX ? downX : currX;\r\n        const topleftY = downY < currY ? downY : currY;\r\n        const botRightX = downX >= currX ? downX : currX;\r\n        const botRightY = downY >= currY ? downY : currY;\r\n\r\n        meshes.forEach((mesh) => {\r\n          if (checkIntersection(topleftX, topleftY, botRightX, botRightY, mesh)) {\r\n            selectedMeshes.push(mesh);\r\n          }\r\n        });\r\n\r\n        isDrag = false;\r\n        rect.dispose();\r\n\r\n        if (selectedMeshes.length > 0) {\r\n          showGizmoForSelectedMeshes(selectedMeshes);\r\n        } else {\r\n          hideGizmo();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function checkIntersection(tlx, tly, brx, bry, mesh) {\r\n    const centerWorld = mesh.getBoundingInfo().boundingBox.centerWorld;\r\n    const meshScreenPoint = BABYLON.Vector3.Project(\r\n      centerWorld,\r\n      BABYLON.Matrix.Identity(),\r\n      scene.getTransformMatrix(),\r\n      camera.viewport.toGlobal(engine.getRenderWidth(), engine.getRenderHeight())\r\n    );\r\n\r\n    if (tlx < meshScreenPoint.x && brx > meshScreenPoint.x && tly < meshScreenPoint.y && bry > meshScreenPoint.y) {\r\n      mesh.showBoundingBox = true;\r\n      // mesh.renderOutline = true;\r\n      // mesh.outlineColor = new BABYLON.Color3(1, 0.66, 0.11);\r\n\r\n      mesh.getChildMeshes().forEach((m) => {\r\n        // m.renderOutline = true;\r\n        // m.outlineColor = new BABYLON.Color3(1, 0.11, 0.44);\r\n\r\n        hl.addMesh(m, new BABYLON.Color3(1, 0.66, 0.11));\r\n      });\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function createGuiRect() {\r\n    rect = new BABYLON.GUI.Rectangle();\r\n    rect.width = \"0px\";\r\n    rect.height = \"0px\";\r\n    rect.color = \"black\";\r\n    rect.alpha = 1; // 0.3\r\n    rect.thickness = 1.5;\r\n    rect.background = \"transparent\";\r\n    texture.addControl(rect);\r\n\r\n    // dash line\r\n    rect._draw = function (context) {\r\n      context.save();\r\n      context.beginPath();\r\n      context.setLineDash([5, 5]);\r\n      context.strokeStyle = this.color;\r\n      context.lineWidth = this.thickness;\r\n      context.globalAlpha = this.alpha;\r\n      context.rect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\r\n      context.stroke();\r\n      context.restore();\r\n    };\r\n  }\r\n\r\n  function calculateBoundingBox(meshes) {\r\n    let minVector = new BABYLON.Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n    let maxVector = new BABYLON.Vector3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n\r\n    meshes.forEach((mesh) => {\r\n      const boundingInfo = mesh.getBoundingInfo();\r\n      const minimum = boundingInfo.boundingBox.minimumWorld;\r\n      const maximum = boundingInfo.boundingBox.maximumWorld;\r\n\r\n      minVector = BABYLON.Vector3.Minimize(minVector, minimum);\r\n      maxVector = BABYLON.Vector3.Maximize(maxVector, maximum);\r\n    });\r\n\r\n    return { min: minVector, max: maxVector, center: minVector.add(maxVector).scale(0.5) };\r\n  }\r\n\r\n  function showGizmoForSelectedMeshes(selectedMeshes) {\r\n    // Remove previous parent mesh and gizmo if exists\r\n    if (parentMesh) {\r\n      parentMesh.dispose();\r\n    }\r\n    if (gizmoManager) {\r\n      gizmoManager.dispose();\r\n    }\r\n\r\n    // Create a new parent mesh\r\n    const boundingBox = calculateBoundingBox(selectedMeshes);\r\n    parentMesh = new BABYLON.TransformNode(\"parent\", scene);\r\n    parentMesh.position = boundingBox.center;\r\n\r\n    selectedMeshes.forEach((mesh) => {\r\n      heirarchy.push({ mesh: mesh, parent: mesh.parent });\r\n\r\n      mesh.setParent(parentMesh);\r\n    });\r\n\r\n    // Initialize GizmoManager\r\n    gizmoManager = new BABYLON.GizmoManager(scene);\r\n    gizmoManager.positionGizmoEnabled = true;\r\n    gizmoManager.rotationGizmoEnabled = false;\r\n    gizmoManager.scaleGizmoEnabled = false;\r\n\r\n    // Attach the gizmo to the parent mesh\r\n    gizmoManager.attachToMesh(parentMesh);\r\n  }\r\n\r\n  function hideGizmo() {\r\n    if (gizmoManager) {\r\n      gizmoManager.attachToMesh(null);\r\n      gizmoManager.dispose();\r\n      gizmoManager = null;\r\n    }\r\n    if (parentMesh) {\r\n      selectedMeshes.forEach((mesh) => {\r\n        mesh.setParent(null);\r\n      });\r\n      parentMesh.dispose();\r\n      parentMesh = null;\r\n    }\r\n  }\r\n\r\n  var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n  var panel = new BABYLON.GUI.StackPanel();\r\n  panel.width = \"200px\";\r\n  panel.isVertical = false;\r\n  panel.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n  panel.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER;\r\n  advancedTexture.addControl(panel);\r\n\r\n  var checkbox = new BABYLON.GUI.Checkbox();\r\n  checkbox.width = \"20px\";\r\n  checkbox.height = \"20px\";\r\n  checkbox.isChecked = isUsingMultiSelection;\r\n  checkbox.color = \"green\";\r\n  checkbox.onIsCheckedChangedObservable.add(function (value) {\r\n    isUsingMultiSelection = !isUsingMultiSelection;\r\n\r\n    if (value) {\r\n      camera.detachControl();\r\n    } else {\r\n      camera.attachControl();\r\n    }\r\n  });\r\n  panel.addControl(checkbox);\r\n\r\n  var header = new BABYLON.GUI.TextBlock();\r\n  header.text = \"Use Multi selection\";\r\n  header.width = \"180px\";\r\n  header.marginLeft = \"5px\";\r\n  header.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  header.color = \"white\";\r\n  panel.addControl(header);\r\n\r\n  return scene;\r\n}\r\n"],"names":["async","createScene","engine","canvas","BABYLON","scene","Scene","clearColor","Color4","useRightHandedSystem","camera","ArcRotateCamera","Math","PI","Vector3","setTarget","Zero","HemisphericLight","intensity","model1","SceneLoader","ImportMeshAsync","meshes","name","scaling","scaleInPlace","model2","position","model3","model4","model5","rootNodes","filter","n","getClassName","texture","GUI","AdvancedDynamicTexture","CreateFullscreenUI","rect","downX","downY","gizmoManager","parentMesh","isDrag","isUsingMultiSelection","selectedMeshes","heirarchy","hl","HighlightLayer","mainTextureRatio","blurVerticalSize","blurHorizontalSize","innerGlow","onPointerDown","event","pickResult","button","forEach","mesh","getChildMeshes","m","removeMesh","Rectangle","width","height","color","alpha","thickness","background","addControl","_draw","context","save","beginPath","setLineDash","strokeStyle","this","lineWidth","globalAlpha","_currentMeasure","left","top","stroke","restore","offsetX","offsetY","index","findIndex","item","setParent","parent","onPointerMove","currX","currY","topleftX","topleftY","rectWidth","rectHeight","target","getBoundingClientRect","onPointerUp","botRightX","botRightY","tlx","tly","brx","bry","centerWorld","getBoundingInfo","boundingBox","meshScreenPoint","Project","Matrix","Identity","getTransformMatrix","viewport","toGlobal","getRenderWidth","getRenderHeight","x","y","showBoundingBox","addMesh","Color3","checkIntersection","push","dispose","length","minVector","Number","MAX_VALUE","maxVector","boundingInfo","minimum","minimumWorld","maximum","maximumWorld","Minimize","Maximize","min","max","center","add","scale","calculateBoundingBox","TransformNode","GizmoManager","positionGizmoEnabled","rotationGizmoEnabled","scaleGizmoEnabled","attachToMesh","showGizmoForSelectedMeshes","hideGizmo","advancedTexture","panel","StackPanel","isVertical","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_RIGHT","verticalAlignment","VERTICAL_ALIGNMENT_CENTER","checkbox","Checkbox","isChecked","onIsCheckedChangedObservable","value","detachControl","attachControl","header","TextBlock","text","marginLeft","textHorizontalAlignment","HORIZONTAL_ALIGNMENT_LEFT"],"sourceRoot":""}