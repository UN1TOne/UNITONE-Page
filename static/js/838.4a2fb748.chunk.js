"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[838],{31838:(o,t,i)=>{async function n(o,t,i){var n=new i.Scene(o);new i.HemisphericLight("light",new i.Vector3(0,1,0),n).intensity=.7,n.clearColor=new i.Color4(.1,.1,.12,1);new i.ArcRotateCamera("camera",-.989,.553,20,new i.Vector3(0,0,0),n).attachControl(),i.Effect.ShadersStore.GridVertexShader="\n        precision highp float;\n        attribute vec3 position;\n        attribute vec3 normal;\n        attribute vec2 uv;\n        uniform mat4 worldViewProjection;\n        varying vec3 vPosition;\n        varying vec3 vNormal;\n        varying vec2 vUV;\n        void main() {\n            gl_Position = worldViewProjection * vec4(position, 1.0);\n            vPosition = position;\n            vNormal = normalize(normal);\n            vUV = uv;\n        }\n    ",i.Effect.ShadersStore.GridFragmentShader="\n        precision highp float;\n        varying vec3 vPosition;\n        varying vec3 vNormal;\n        varying vec2 vUV;\n        uniform vec3 color;\n        uniform float opacity;\n        void main() {\n            vec2 grid = abs(fract(vUV * 10.0 - 0.5) - 0.5) / fwidth(vUV * 10.0);\n            float line = min(grid.x, grid.y);\n            float alpha = step(1.0, line);\n            gl_FragColor = vec4(color, opacity * (1.0 - alpha));\n        }\n    ";const e=(o,t)=>{const n=new i.ShaderMaterial("Grid",o,"Grid",{attributes:["position","normal","uv"],uniforms:["worldViewProjection","color","opacity"]});return n.setColor3("color",t),n.setFloat("opacity",1),n},r=1.2,a=new i.Color3(.8,.6,.2),c=new i.Color3(1,.93,.15),l=[];for(let s=0;s<8;s++){l[s]=[];for(let o=0;o<8;o++){const t=i.MeshBuilder.CreateBox(`tile-${s}-${o}`,{width:1,height:.1,depth:1},n);t.position.x=s*r-4.8,t.position.z=o*r-4.8,t.position.y=0;const A=e(n,a);t.material=A,l[s][o]=t,t.actionManager=new i.ActionManager(n),t.actionManager.registerAction(new i.ExecuteCodeAction(i.ActionManager.OnPointerOverTrigger,(()=>{i.Animation.CreateAndStartAnimation("tileHover",t,"position.y",60,10,t.position.y,.3,i.Animation.ANIMATIONLOOPMODE_CONSTANT),i.Animation.CreateAndStartAnimation("tileHoverFlip",t,"rotation.x",60,10,t.rotation.x,Math.PI,i.Animation.ANIMATIONLOOPMODE_CONSTANT),t.material.setColor3("color",c)}))),t.actionManager.registerAction(new i.ExecuteCodeAction(i.ActionManager.OnPointerOutTrigger,(()=>{i.Animation.CreateAndStartAnimation("tileReset",t,"position.y",60,10,t.position.y,0,i.Animation.ANIMATIONLOOPMODE_CONSTANT),i.Animation.CreateAndStartAnimation("tileHoverFlip",t,"rotation.x",60,10,t.rotation.x,0,i.Animation.ANIMATIONLOOPMODE_CONSTANT),t.material.setColor3("color",a)})))}}return n.onPointerMove=()=>{const o=n.pick(n.pointerX,n.pointerY);if(o.hit){const t=o.pickedPoint;l.forEach((o=>{o.forEach((o=>{const n=o.position.x-t.x,e=o.position.z-t.z,r=Math.sqrt(n*n+e*e),a=r<3?.5*(1-r/3):0;Math.abs(o.targetHeight-a)>.01&&(i.Animation.CreateAndStartAnimation("tileMove",o,"position.y",60,10,o.position.y,o.position.y+.2,i.Animation.ANIMATIONLOOPMODE_CONSTANT),i.Animation.CreateAndStartAnimation("tileMoveFlip",o,"rotation.x",60,10,o.rotation.x,o.rotation.x+Math.PI/2,i.Animation.ANIMATIONLOOPMODE_CONSTANT))}))}))}},n}i.r(t),i.d(t,{createScene:()=>n})}}]);
//# sourceMappingURL=838.4a2fb748.chunk.js.map