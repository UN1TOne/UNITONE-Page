"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[470],{62470:(e,t,o)=>{async function n(e,t,o){console.clear();const n=new o.Scene(e);n.clearColor=new o.Color4(.75,.66,.99,0);const i=new o.ArcRotateCamera("camera",Math.PI/2,Math.PI/3,24,o.Vector3.Zero(),n);i.attachControl(t,!0),i.panningSensibility=0;var a=new o.DirectionalLight("dirLight",new o.Vector3(-1,-1,-.5),n);a.position=new o.Vector3(1,1,.5);var s=new o.PointLight("pointLight",new o.Vector3(1,1,1),n);s.intensity=.7,n.onPointerMove=function(e){const t=n.pick(n.pointerX,n.pointerY);if(t.hit&&t.pickedPoint){const e=t.pickedPoint;o.Vector3.LerpToRef(s.position,new o.Vector3(e.x,e.y+2,e.z),.1,s.position);const n=e.subtract(a.position).normalize();o.Vector3.LerpToRef(a.direction,n,.1,a.direction)}};const r=[...Array(100)].map((()=>.8*Math.random()+.2)),c=[...Array(100)].map((()=>({x:10*(Math.random()-.5),y:10*(Math.random()-.5),z:10*(Math.random()-.5)}))),l=new o.PBRMaterial("mat",n);l.metallic=.47,l.roughness=.53,l.albedoColor=new o.Color3(.75,.61,.95),l.emissiveColor=new o.Color3(.57,.33,.75);const d=new o.CellMaterial("cel",n);d.diffuseColor=l.albedoColor,d.computeHighLevel=!0;const p=[],u=new Map,m=new Map;c.forEach(((e,t)=>{const i=o.MeshBuilder.CreateSphere(`sphere${t}`,{diameter:2*r[t]},n);i.position.set(e.x,-10,e.z),i.material=l,i.material=d,i.metadata={originalPosition:e,radius:r[t]},p.push(i),u.set(i.uniqueId,new o.Vector3(0,0,0))}));let h,I=!1;p.forEach(((e,t)=>{const{originalPosition:i}=e.metadata,a=500*Math.random();e.position.set(0,0,0),e.scaling.set(.1,.1,.1),setTimeout((()=>{const a=new o.Animation(`scaleAnim${t}`,"scaling",60,o.Animation.ANIMATIONTYPE_VECTOR3,o.Animation.ANIMATIONLOOPMODE_CONSTANT),s=[{frame:0,value:new o.Vector3(.1,.1,.1)},{frame:30,value:new o.Vector3(1.2,1.2,1.2)},{frame:60,value:new o.Vector3(1,1,1)}];a.setKeys(s);const r=new o.Animation(`positionAnim${t}`,"position",60,o.Animation.ANIMATIONTYPE_VECTOR3,o.Animation.ANIMATIONLOOPMODE_CONSTANT),c=[{frame:0,value:new o.Vector3(0,0,0)},{frame:60,value:new o.Vector3(i.x,i.y,i.z)}];r.setKeys(c),n.beginDirectAnimation(e,[a,r],0,60,!1,1,(()=>{t===p.length-1&&setTimeout((()=>{I=!0}),500)}))}),a)})),n.onPointerObservable.add((e=>{if(e.type===o.PointerEventTypes.POINTERMOVE){const e=n.pick(n.pointerX,n.pointerY);if(e.hit&&e.pickedMesh&&e.pickedPoint){h=e.pickedMesh;const t=e.pickedPoint.subtract(h.position).normalize().scale(.3);m.has(h.uniqueId)?m.get(h.uniqueId).addInPlace(t):m.set(h.uniqueId,t)}}})),n.onBeforeRenderObservable.add((()=>{if(!I)return;const e=.002*performance.now();for(let t=0;t<p.length;t++){const o=p[t],n=o.metadata.originalPosition;let i=u.get(o.uniqueId);if(m.has(o.uniqueId)&&(i.addInPlace(m.get(o.uniqueId)),m.delete(o.uniqueId)),o!==h){const i=.2*t,a=.1*Math.sin(e+i),s=.05*Math.cos(e+i);o.position.y=n.y+a,o.position.z=n.z+s}for(let e=t+1;e<p.length;e++){const t=p[e];let n=u.get(t.uniqueId);const a=o.metadata.radius+t.metadata.radius,s=o.position.subtract(t.position),r=s.lengthSquared();if(r<a*a){const e=s.normalize().scale(.1*(a-Math.sqrt(r)));o.position.addInPlace(e),t.position.subtractInPlace(e),i.addInPlace(e.scale(.2)),n.subtractInPlace(e.scale(.2)),u.set(o.uniqueId,i),u.set(t.uniqueId,n)}}o.position.addInPlace(i),i.scaleInPlace(.1),u.set(o.uniqueId,i),o.position.x+=.02*(n.x-o.position.x),o.position.y+=.02*(n.y-o.position.y),o.position.z+=.02*(n.z-o.position.z)}}));const P=new o.EdgeDetectionPostProcess("Edge PP",n,1,i);return P.samples=4,P.edgeIntensity=.3,P.edgeWidth=.2,P.edgeColor=new o.Color3(0,0,0),e.setHardwareScalingLevel(.6),n}o.r(t),o.d(t,{createScene:()=>n})}}]);
//# sourceMappingURL=470.d44e5f30.chunk.js.map