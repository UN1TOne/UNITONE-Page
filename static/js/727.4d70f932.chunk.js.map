{"version":3,"file":"static/js/727.4d70f932.chunk.js","mappings":"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","sources":["babylon/camPathRecord.js"],"sourcesContent":["export async function createScene(engine, canvas, BABYLON) {\r\n  let scene, gui;\r\n  let animSpeed = 1;\r\n  let viaCount = 0;\r\n  const viaPoints = [];\r\n  let isAnimPlaying = false;\r\n  let gizmoManager;\r\n  let currentAnimation;\r\n  let usingCamera = true;\r\n  let isUsingCatmullRomSpline = true;\r\n  let bezierLines;\r\n  let startPoint, endPoint, targetPoint, control;\r\n  let controlTagInfo = []; // {rect, label, target, line}\r\n  let arrow;\r\n  let recorder;\r\n\r\n  console.clear();\r\n  scene = new BABYLON.Scene(engine);\r\n  scene.useRightHandedSystem = true;\r\n  scene.clearColor = new BABYLON.Color4(0.45, 0.45, 0.45, 1);\r\n\r\n  const initCamPos = new BABYLON.Vector3(0, 5, -10);\r\n  const initCamRot = new BABYLON.Vector3(-0.026, 0.23, 0);\r\n\r\n  var camera = new BABYLON.FreeCamera(\"camera1\", initCamPos, scene);\r\n  camera.rotation = initCamRot;\r\n  camera.position.z = -16;\r\n  camera.attachControl(canvas, true);\r\n\r\n  var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n  light.intensity = 0.7;\r\n\r\n  var groundMaterial = new BABYLON.GridMaterial(\"groundMaterial\", scene);\r\n  groundMaterial.majorUnitFrequency = 5;\r\n  groundMaterial.minorUnitVisibility = 0.5;\r\n  groundMaterial.gridRatio = 2;\r\n  groundMaterial.opacity = 0.99;\r\n  groundMaterial.useMaxLine = true;\r\n\r\n  var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width: 100, height: 100 }, scene, false);\r\n  ground.material = groundMaterial;\r\n\r\n  gizmoManager = new BABYLON.GizmoManager(scene);\r\n  gizmoManager.positionGizmoEnabled = true;\r\n  gizmoManager.gizmos.positionGizmo.planarGizmoEnabled = true;\r\n\r\n  const pointA = new BABYLON.Vector3(0, 1, 0);\r\n  const pointB = new BABYLON.Vector3(10, 1, 10);\r\n  const controlPoint = new BABYLON.Vector3(5, 5, 5);\r\n\r\n  startPoint = BABYLON.MeshBuilder.CreateSphere(\"Start\", { diameter: 0.5 }, scene);\r\n  startPoint.material = new BABYLON.StandardMaterial(\"startMaterial\", scene);\r\n  startPoint.material.diffuseColor = new BABYLON.Color3(0, 0, 1);\r\n  startPoint.position = pointA;\r\n\r\n  endPoint = BABYLON.MeshBuilder.CreateSphere(\"End\", { diameter: 0.5 }, scene);\r\n  endPoint.material = new BABYLON.StandardMaterial(\"endMaterial\", scene);\r\n  endPoint.material.diffuseColor = new BABYLON.Color3(0, 1, 0);\r\n  endPoint.position = pointB;\r\n\r\n  targetPoint = BABYLON.MeshBuilder.CreateBox(\"target\", { size: 1 }, scene);\r\n  targetPoint.position = new BABYLON.Vector3(5, 1, 5);\r\n  targetPoint.material = new BABYLON.StandardMaterial(\"targetMaterial\", scene);\r\n  targetPoint.material.diffuseColor = new BABYLON.Color3(1, 0, 0);\r\n\r\n  // control for bezier curve with QuadraticBezier\r\n  control = BABYLON.MeshBuilder.CreateSphere(\"Control\", { diameter: 0.5 }, scene);\r\n  control.material = new BABYLON.StandardMaterial(\"controlMaterial\", scene);\r\n  control.material.diffuseColor = new BABYLON.Color3(0.73, 0.13, 0.69);\r\n  control.position = controlPoint;\r\n  control.setEnabled(false);\r\n\r\n  arrow = BABYLON.MeshBuilder.CreateCylinder(\r\n    \"ArrowHead\",\r\n    {\r\n      height: 0.5,\r\n      diameterTop: 0,\r\n      diameterBottom: 0.6,\r\n      tessellation: 16,\r\n    },\r\n    scene\r\n  );\r\n  arrow.rotation.x = Math.PI / 2;\r\n  arrow.bakeCurrentTransformIntoVertices();\r\n  arrow.setEnabled(false);\r\n  arrow.lookAt(targetPoint.absolutePosition);\r\n  arrow.position = startPoint.position;\r\n  arrow.renderOutline = true;\r\n\r\n  // Initial bezier curve\r\n  updateBezierCurve();\r\n\r\n  // Create GUI\r\n  gui = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n  setSettingGUI();\r\n\r\n  const playButton = BABYLON.GUI.Button.CreateSimpleButton(\"playButton\", \"Play\");\r\n  playButton.width = \"150px\";\r\n  playButton.height = \"40px\";\r\n  playButton.color = \"white\";\r\n  playButton.background = \"green\";\r\n  playButton.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n  playButton.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n  gui.addControl(playButton);\r\n\r\n  if (BABYLON.VideoRecorder.IsSupported(engine)) {\r\n    recorder = new BABYLON.VideoRecorder(engine);\r\n  }\r\n\r\n  const toggleAnimation = () => {\r\n    isAnimPlaying = !isAnimPlaying;\r\n    console.log(isAnimPlaying);\r\n\r\n    if (isAnimPlaying) {\r\n      playButton.textBlock.text = \"Stop\";\r\n\r\n      if (usingCamera) {\r\n        gui.rootContainer.getDescendants().forEach((control) => {\r\n          control.isVisible = false;\r\n        });\r\n        bezierLines.isVisible = false;\r\n        startPoint.isVisible = false;\r\n        endPoint.isVisible = false;\r\n        control.isVisible = false;\r\n        ground.isVisible = false;\r\n\r\n        scene.meshes.filter((m) => m.name.startsWith(\"Via\")).forEach((m) => (m.isVisible = false));\r\n        gizmoManager.positionGizmoEnabled = false;\r\n        scene.clearColor = new BABYLON.Color4(0.45, 0.45, 0.45, 0);\r\n\r\n        recorder.startRecording(\"webmTest.webm\", 60);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        animateCamera();\r\n      }, 500);\r\n    } else {\r\n      scene.stopAnimation(currentAnimation);\r\n      playButton.textBlock.text = \"Play\";\r\n\r\n      if (usingCamera) {\r\n        recorder.stopRecording();\r\n\r\n        scene.clearColor = new BABYLON.Color4(0.45, 0.45, 0.45, 1);\r\n\r\n        gui.rootContainer.getDescendants().forEach((control) => {\r\n          control.isVisible = true;\r\n        });\r\n        bezierLines.isVisible = true;\r\n        startPoint.isVisible = true;\r\n        endPoint.isVisible = true;\r\n        control.isVisible = true;\r\n        ground.isVisible = true;\r\n\r\n        scene.meshes.filter((m) => m.name.startsWith(\"Via\")).forEach((m) => (m.isVisible = true));\r\n        gizmoManager.positionGizmoEnabled = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  playButton.onPointerUpObservable.add(toggleAnimation);\r\n\r\n  // setting GUI tag\r\n  setGUITag(startPoint, \"Start\", \"blue\");\r\n  setGUITag(endPoint, \"End\", \"green\");\r\n  setGUITag(control, \"Curve Control\", \"purple\");\r\n  setGUITag(targetPoint, \"Target\", \"red\");\r\n\r\n  // Animate camera along bezier curve and look at targetBox\r\n  const animateCamera = () => {\r\n    let points, curve;\r\n\r\n    if (isUsingCatmullRomSpline) {\r\n      points = [startPoint.position, ...viaPoints.map((vp) => vp.position), endPoint.position, startPoint.position];\r\n      curve = BABYLON.Curve3.CreateCatmullRomSpline(points, 100, false);\r\n    } else {\r\n      points = [startPoint.position, ...viaPoints.map((vp) => vp.position), endPoint.position];\r\n\r\n      let combinedCurve = BABYLON.Curve3.CreateQuadraticBezier(points[0], control.position, points[1], 100);\r\n      for (let i = 1; i < points.length - 1; i++) {\r\n        const curveSegment = BABYLON.Curve3.CreateQuadraticBezier(points[i], control.position, points[i + 1], 100);\r\n        combinedCurve = combinedCurve.continue(curveSegment);\r\n      }\r\n      curve = combinedCurve;\r\n    }\r\n\r\n    const bezierPoints = curve.getPoints();\r\n\r\n    let target;\r\n    if (usingCamera) {\r\n      target = camera;\r\n    } else {\r\n      target = arrow;\r\n    }\r\n\r\n    const animation = new BABYLON.Animation(\r\n      \"cameraAnimation\",\r\n      \"position\",\r\n      30,\r\n      BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\r\n      BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT\r\n    );\r\n    const keys = [];\r\n    for (let i = 0; i < bezierPoints.length; i++) {\r\n      keys.push({ frame: i, value: bezierPoints[i] });\r\n    }\r\n    animation.setKeys(keys);\r\n\r\n    currentAnimation = target;\r\n    target.animations.push(animation);\r\n    let beforeRenderObserver = scene.onBeforeRenderObservable.add(() => {\r\n      camera.setTarget(targetPoint.position);\r\n\r\n      arrow.lookAt(targetPoint.position);\r\n    });\r\n\r\n    scene.beginAnimation(target, 0, bezierPoints.length - 1, false, animSpeed, () => {\r\n      scene.onBeforeRenderObservable.remove(beforeRenderObserver);\r\n      camera.attachControl(canvas, true);\r\n      camera.position = initCamPos;\r\n      camera.setTarget(targetPoint.position);\r\n      camera.rotation = initCamRot;\r\n\r\n      arrow.position = startPoint.position;\r\n      playButton.textBlock.text = \"Play\";\r\n      isAnimPlaying = false;\r\n\r\n      if (usingCamera) {\r\n        recorder.stopRecording();\r\n\r\n        scene.clearColor = new BABYLON.Color4(0.45, 0.45, 0.45, 1);\r\n\r\n        gui.rootContainer.getDescendants().forEach((control) => {\r\n          control.isVisible = true;\r\n        });\r\n        bezierLines.isVisible = true;\r\n        startPoint.isVisible = true;\r\n        endPoint.isVisible = true;\r\n        control.isVisible = true;\r\n        ground.isVisible = true;\r\n        scene.meshes.filter((m) => m.name.startsWith(\"Via\")).forEach((m) => (m.isVisible = true));\r\n\r\n        gizmoManager.positionGizmoEnabled = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  scene.onBeforeRenderObservable.add(updateBezierCurve);\r\n\r\n  function updateBezierCurve() {\r\n    if (bezierLines) {\r\n      bezierLines.dispose();\r\n    }\r\n\r\n    if (isUsingCatmullRomSpline) {\r\n      // CatmullRomSpline\r\n      const points = [startPoint.position, ...viaPoints.map((vp) => vp.position), endPoint.position, startPoint.position];\r\n      const curve = BABYLON.Curve3.CreateCatmullRomSpline(points, 100, false);\r\n      const bezierPoints = curve.getPoints();\r\n      bezierLines = BABYLON.MeshBuilder.CreateLines(\"bezierLines\", { points: bezierPoints }, scene);\r\n    } else {\r\n      // QuadraticBezier\r\n      const points = [startPoint.position, ...viaPoints.map((vp) => vp.position), endPoint.position];\r\n      let combinedCurve = BABYLON.Curve3.CreateQuadraticBezier(points[0], control.position, points[1], 100);\r\n      for (let i = 1; i < points.length - 1; i++) {\r\n        const curveSegment = BABYLON.Curve3.CreateQuadraticBezier(points[i], control.position, points[i + 1], 100);\r\n        combinedCurve = combinedCurve.continue(curveSegment);\r\n      }\r\n      const bezierPoints = combinedCurve.getPoints();\r\n      bezierLines = BABYLON.MeshBuilder.CreateLines(\"bezierLines\", { points: bezierPoints }, scene);\r\n    }\r\n  }\r\n\r\n  function setSettingGUI() {\r\n    // stack panel\r\n    var stackPanel = new BABYLON.GUI.StackPanel();\r\n    stackPanel.width = \"200px\";\r\n    stackPanel.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n    stackPanel.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n    gui.addControl(stackPanel);\r\n\r\n    // \"Use Camera\" check box\r\n    var cameraCheckboxContainer = new BABYLON.GUI.StackPanel();\r\n    cameraCheckboxContainer.isVertical = false;\r\n    cameraCheckboxContainer.height = \"30px\";\r\n    stackPanel.addControl(cameraCheckboxContainer);\r\n\r\n    var cameraCheckbox = new BABYLON.GUI.Checkbox();\r\n    cameraCheckbox.width = \"20px\";\r\n    cameraCheckbox.height = \"20px\";\r\n    cameraCheckbox.isChecked = true;\r\n    cameraCheckbox.color = \"green\";\r\n    cameraCheckbox.onIsCheckedChangedObservable.add(function (value) {\r\n      usingCamera = value;\r\n      // arrow.getChildMeshes().forEach(m=> m.setEnabled(!usingCamera));\r\n      arrow.setEnabled(!usingCamera);\r\n    });\r\n    cameraCheckboxContainer.addControl(cameraCheckbox);\r\n\r\n    var cameraCheckboxHeader = new BABYLON.GUI.TextBlock();\r\n    cameraCheckboxHeader.text = \"Use Camera\";\r\n    cameraCheckboxHeader.width = \"180px\";\r\n    cameraCheckboxHeader.height = \"20px\";\r\n    cameraCheckboxHeader.marginLeft = \"5px\";\r\n    cameraCheckboxHeader.color = \"white\";\r\n    cameraCheckboxContainer.addControl(cameraCheckboxHeader);\r\n\r\n    // \"CatmullRomSpline\" check box\r\n    var splineCheckboxContainer = new BABYLON.GUI.StackPanel();\r\n    splineCheckboxContainer.isVertical = false;\r\n    splineCheckboxContainer.height = \"30px\";\r\n    stackPanel.addControl(splineCheckboxContainer);\r\n\r\n    var splineCheckbox = new BABYLON.GUI.Checkbox();\r\n    splineCheckbox.width = \"20px\";\r\n    splineCheckbox.height = \"20px\";\r\n    splineCheckbox.isChecked = isUsingCatmullRomSpline;\r\n    splineCheckbox.color = \"green\";\r\n    splineCheckbox.onIsCheckedChangedObservable.add(function (value) {\r\n      isUsingCatmullRomSpline = value;\r\n\r\n      // toggle control\r\n      control.setEnabled(!value);\r\n      if (controlTagInfo.length > 0) {\r\n        controlTagInfo.forEach((el) => {\r\n          el.isVisible = !value;\r\n        });\r\n      }\r\n\r\n      updateBezierCurve();\r\n    });\r\n    splineCheckboxContainer.addControl(splineCheckbox);\r\n\r\n    var splineCheckboxHeader = new BABYLON.GUI.TextBlock();\r\n    splineCheckboxHeader.text = \"CatmullRomSpline\";\r\n    splineCheckboxHeader.width = \"180px\";\r\n    splineCheckboxHeader.height = \"20px\";\r\n    splineCheckboxHeader.marginLeft = \"5px\";\r\n    splineCheckboxHeader.color = \"white\";\r\n    splineCheckboxContainer.addControl(splineCheckboxHeader);\r\n\r\n    // \"Speed: 1\" Slider\r\n    var sliderHeader = new BABYLON.GUI.TextBlock();\r\n    sliderHeader.text = \"Speed: 1\";\r\n    sliderHeader.height = \"30px\";\r\n    sliderHeader.color = \"white\";\r\n    stackPanel.addControl(sliderHeader);\r\n\r\n    var slider = new BABYLON.GUI.Slider();\r\n    slider.minimum = 0.1;\r\n    slider.maximum = 5;\r\n    slider.step = 0.1;\r\n    slider.value = animSpeed;\r\n    slider.height = \"20px\";\r\n    slider.width = \"200px\";\r\n    slider.onValueChangedObservable.add(function (value) {\r\n      sliderHeader.text = \"Speed: \" + value.toFixed(1);\r\n      animSpeed = value;\r\n    });\r\n    stackPanel.addControl(slider);\r\n\r\n    // \"Add Via Target\" Button\r\n    var addViaButton = BABYLON.GUI.Button.CreateSimpleButton(\"addViaButton\", \"Add Via Target\");\r\n    addViaButton.width = \"150px\";\r\n    addViaButton.height = \"40px\";\r\n    addViaButton.color = \"white\";\r\n    addViaButton.background = \"blue\";\r\n    addViaButton.paddingTop = \"10px\";\r\n    addViaButton.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;\r\n    addViaButton.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n    stackPanel.addControl(addViaButton);\r\n\r\n    addViaButton.onPointerUpObservable.add(() => {\r\n      viaCount++;\r\n      const viaPoint = BABYLON.MeshBuilder.CreateSphere(`Via${viaCount}`, { diameter: 0.5 }, scene);\r\n      viaPoint.material = new BABYLON.StandardMaterial(`viaMaterial${viaCount}`, scene);\r\n      viaPoint.material.diffuseColor = new BABYLON.Color3(1, 1, 1); // White color\r\n      viaPoint.position = new BABYLON.Vector3(viaCount * 2, 1, 0);\r\n\r\n      setGUITag(viaPoint, `Via${viaCount}`, \"white\");\r\n\r\n      gizmoManager.attachToMesh(viaPoint);\r\n      viaPoints.push(viaPoint);\r\n\r\n      updateBezierCurve();\r\n    });\r\n  }\r\n\r\n  function setGUITag(targetMesh, name, color) {\r\n    var rect = new BABYLON.GUI.Rectangle(\"Rect\");\r\n    rect.width = 0.2;\r\n    rect.height = \"40px\";\r\n    rect.cornerRadius = 20;\r\n    rect.color = color;\r\n    rect.thickness = 4;\r\n    rect.background = \"transparent\";\r\n    gui.addControl(rect);\r\n    rect.linkWithMesh(targetMesh);\r\n    rect.linkOffsetY = -150;\r\n\r\n    var label = new BABYLON.GUI.TextBlock(\"Label\");\r\n    label.text = name;\r\n    label.outlineColor = \"white\";\r\n    label.outlineWidth = 3;\r\n    rect.addControl(label);\r\n\r\n    var target = new BABYLON.GUI.Ellipse(\"Ellipse\");\r\n    target.width = \"20px\";\r\n    target.height = \"20px\";\r\n    target.color = \"Orange\";\r\n    target.thickness = 4;\r\n    target.background = \"green\";\r\n    gui.addControl(target);\r\n    target.linkWithMesh(targetMesh);\r\n\r\n    var line = new BABYLON.GUI.Line(\"Line\");\r\n    line.lineWidth = 4;\r\n    line.color = \"Orange\";\r\n    line.y2 = 20;\r\n    line.linkOffsetY = -10;\r\n    gui.addControl(line);\r\n    line.linkWithMesh(targetMesh);\r\n    line.connectedControl = rect;\r\n\r\n    if (name === \"Curve Control\") {\r\n      controlTagInfo.push(rect);\r\n      controlTagInfo.push(label);\r\n      controlTagInfo.push(target);\r\n      controlTagInfo.push(line);\r\n\r\n      rect.isVisible = false;\r\n      label.isVisible = false;\r\n      target.isVisible = false;\r\n      line.isVisible = false;\r\n    }\r\n  }\r\n  return scene;\r\n}\r\n"],"names":["async","createScene","engine","canvas","BABYLON","scene","gui","animSpeed","viaCount","viaPoints","gizmoManager","currentAnimation","bezierLines","startPoint","endPoint","targetPoint","control","arrow","recorder","isAnimPlaying","usingCamera","isUsingCatmullRomSpline","controlTagInfo","console","clear","Scene","useRightHandedSystem","clearColor","Color4","initCamPos","Vector3","initCamRot","camera","FreeCamera","rotation","position","z","attachControl","HemisphericLight","intensity","groundMaterial","GridMaterial","majorUnitFrequency","minorUnitVisibility","gridRatio","opacity","useMaxLine","ground","MeshBuilder","CreateGround","width","height","material","GizmoManager","positionGizmoEnabled","gizmos","positionGizmo","planarGizmoEnabled","pointA","pointB","controlPoint","CreateSphere","diameter","StandardMaterial","diffuseColor","Color3","CreateBox","size","setEnabled","CreateCylinder","diameterTop","diameterBottom","tessellation","x","Math","PI","bakeCurrentTransformIntoVertices","lookAt","absolutePosition","renderOutline","updateBezierCurve","GUI","AdvancedDynamicTexture","CreateFullscreenUI","stackPanel","StackPanel","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_TOP","addControl","cameraCheckboxContainer","isVertical","cameraCheckbox","Checkbox","isChecked","color","onIsCheckedChangedObservable","add","value","cameraCheckboxHeader","TextBlock","text","marginLeft","splineCheckboxContainer","splineCheckbox","length","forEach","el","isVisible","splineCheckboxHeader","sliderHeader","slider","Slider","minimum","maximum","step","onValueChangedObservable","toFixed","addViaButton","Button","CreateSimpleButton","background","paddingTop","HORIZONTAL_ALIGNMENT_CENTER","VERTICAL_ALIGNMENT_BOTTOM","onPointerUpObservable","viaPoint","setGUITag","attachToMesh","push","setSettingGUI","playButton","VideoRecorder","IsSupported","toggleAnimation","log","textBlock","rootContainer","getDescendants","meshes","filter","m","name","startsWith","startRecording","setTimeout","animateCamera","stopAnimation","stopRecording","points","curve","map","vp","Curve3","CreateCatmullRomSpline","combinedCurve","CreateQuadraticBezier","i","curveSegment","continue","bezierPoints","getPoints","target","animation","Animation","ANIMATIONTYPE_VECTOR3","ANIMATIONLOOPMODE_CONSTANT","keys","frame","setKeys","animations","beforeRenderObserver","onBeforeRenderObservable","setTarget","beginAnimation","remove","dispose","CreateLines","targetMesh","rect","Rectangle","cornerRadius","thickness","linkWithMesh","linkOffsetY","label","outlineColor","outlineWidth","Ellipse","line","Line","lineWidth","y2","connectedControl"],"sourceRoot":""}